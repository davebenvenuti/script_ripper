---
http_interactions:
- request:
    method: get
    uri: https://jellyfin.org/docs/general/administration/installing.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '10971'
      Server:
      - GitHub.com
      Content-Type:
      - text/html; charset=utf-8
      X-Origin-Cache:
      - HIT
      Last-Modified:
      - Wed, 17 Aug 2022 22:13:12 GMT
      Access-Control-Allow-Origin:
      - "*"
      Strict-Transport-Security:
      - max-age=31556952
      Etag:
      - W/"62fd67f8-9b75"
      Expires:
      - Sat, 03 Sep 2022 16:43:59 GMT
      Cache-Control:
      - max-age=600
      X-Proxy-Cache:
      - MISS
      X-Github-Request-Id:
      - A7D0:8046:EB3C16:10E0AF7:631381F7
      Accept-Ranges:
      - bytes
      Date:
      - Sat, 03 Sep 2022 20:59:58 GMT
      Via:
      - 1.1 varnish
      Age:
      - '0'
      X-Served-By:
      - cache-bfi-krnt7300048-BFI
      X-Cache:
      - HIT
      X-Cache-Hits:
      - '1'
      X-Timer:
      - S1662238798.328825,VS0,VE71
      Vary:
      - Accept-Encoding
      X-Fastly-Request-Id:
      - d2e2383c9c5ac82e06fc70822c0cd4d52e213ac1
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        77u/PCFET0NUWVBFIGh0bWw+DQo8IS0tW2lmIElFXT48IVtlbmRpZl0tLT4NCjxodG1sPg0KICANCiAgPGhlYWQ+DQogICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPg0KICAgIDxtZXRhIGh0dHAtZXF1aXY9IlgtVUEtQ29tcGF0aWJsZSIgY29udGVudD0iSUU9ZWRnZSxjaHJvbWU9MSI+DQogICAgPHRpdGxlPkluc3RhbGxpbmcgSmVsbHlmaW4gfCBEb2N1bWVudGF0aW9uIC0gSmVsbHlmaW4gUHJvamVjdCA8L3RpdGxlPg0KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgiPg0KICAgIDxtZXRhIG5hbWU9InRpdGxlIiBjb250ZW50PSJJbnN0YWxsaW5nIEplbGx5ZmluIHwgRG9jdW1lbnRhdGlvbiAtIEplbGx5ZmluIFByb2plY3QgIj4NCiAgICA8bWV0YSBuYW1lPSJnZW5lcmF0b3IiIGNvbnRlbnQ9ImRvY2Z4IDIuNTkuMy4wIj4NCiAgICANCiAgICA8bGluayByZWw9InNob3J0Y3V0IGljb24iIGhyZWY9Ii4uLy4uL2ltYWdlcy9mYXZpY29uLnBuZyI+DQogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIuLi8uLi9zdHlsZXMvZG9jZngudmVuZG9yLmNzcyI+DQogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIuLi8uLi9zdHlsZXMvZG9jZnguY3NzIj4NCiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii4uLy4uL3N0eWxlcy9tYWluLmNzcyI+DQogICAgPG1ldGEgcHJvcGVydHk9ImRvY2Z4Om5hdnJlbCIgY29udGVudD0iLi4vLi4vdG9jLmh0bWwiPg0KICAgIDxtZXRhIHByb3BlcnR5PSJkb2NmeDp0b2NyZWwiIGNvbnRlbnQ9Ii4uL3RvYy5odG1sIj4NCiAgICANCiAgICA8bWV0YSBwcm9wZXJ0eT0iZG9jZng6cmVsIiBjb250ZW50PSIuLi8uLi8iPg0KICAgIA0KICA8L2hlYWQ+DQogIDxib2R5IGRhdGEtc3B5PSJzY3JvbGwiIGRhdGEtdGFyZ2V0PSIjYWZmaXgiIGRhdGEtb2Zmc2V0PSIxMjAiPg0KICAgIDxkaXYgaWQ9IndyYXBwZXIiPg0KICAgICAgPGhlYWRlcj4NCiAgICAgICAgDQogICAgICAgIDxuYXYgaWQ9ImF1dG9jb2xsYXBzZSIgY2xhc3M9Im5hdmJhciBuYXZiYXItaW52ZXJzZSBuZy1zY29wZSIgcm9sZT0ibmF2aWdhdGlvbiI+DQogICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdmJhci1oZWFkZXIiPg0KICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9Im5hdmJhci10b2dnbGUiIGRhdGEtdG9nZ2xlPSJjb2xsYXBzZSIgZGF0YS10YXJnZXQ9IiNuYXZiYXIiPg0KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzci1vbmx5Ij5Ub2dnbGUgbmF2aWdhdGlvbjwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1iYXIiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1iYXIiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1iYXIiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgPC9idXR0b24+DQogICAgICAgICAgICAgIA0KICAgICAgICAgICAgICA8YSBjbGFzcz0ibmF2YmFyLWJyYW5kIiBocmVmPSIuLi8uLi9pbmRleC5odG1sIj4NCiAgICAgICAgICAgICAgICA8aW1nIGlkPSJsb2dvIiBjbGFzcz0ic3ZnIiBzcmM9Ii4uLy4uL2ltYWdlcy9oZWFkZXItaWNvbi5zdmciIGFsdD0iIj4NCiAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2xsYXBzZSBuYXZiYXItY29sbGFwc2UiIGlkPSJuYXZiYXIiPg0KICAgICAgICAgICAgICA8Zm9ybSBjbGFzcz0ibmF2YmFyLWZvcm0gbmF2YmFyLXJpZ2h0IiByb2xlPSJzZWFyY2giIGlkPSJzZWFyY2giPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJzZWFyY2gtcXVlcnkiIHBsYWNlaG9sZGVyPSJTZWFyY2giIGF1dG9jb21wbGV0ZT0ib2ZmIj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgPC9mb3JtPg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvbmF2Pg0KICAgICAgICANCiAgICAgICAgPGRpdiBjbGFzcz0ic3VibmF2IG5hdmJhciBuYXZiYXItZGVmYXVsdCI+DQogICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIGhpZGUtd2hlbi1zZWFyY2giIGlkPSJicmVhZGNydW1iIj4NCiAgICAgICAgICAgIDx1bCBjbGFzcz0iYnJlYWRjcnVtYiI+DQogICAgICAgICAgICAgIDxsaT48L2xpPg0KICAgICAgICAgICAgPC91bD4NCiAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgICA8L2hlYWRlcj4NCiAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciBib2R5LWNvbnRlbnQiPg0KICAgICAgICANCiAgICAgICAgPGRpdiBpZD0ic2VhcmNoLXJlc3VsdHMiPg0KICAgICAgICAgIDxkaXYgY2xhc3M9InNlYXJjaC1saXN0Ij5TZWFyY2ggUmVzdWx0cyBmb3IgPHNwYW4+PC9zcGFuPjwvZGl2Pg0KICAgICAgICAgIDxkaXYgY2xhc3M9InNyLWl0ZW1zIj4NCiAgICAgICAgICAgIDxwPjxpIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLXJlZnJlc2ggaW5kZXgtbG9hZGluZyI+PC9pPjwvcD4NCiAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICA8dWwgaWQ9InBhZ2luYXRpb24iIGRhdGEtZmlyc3Q9IkZpcnN0IiBkYXRhLXByZXY9IlByZXZpb3VzIiBkYXRhLW5leHQ9Ik5leHQiIGRhdGEtbGFzdD0iTGFzdCI+PC91bD4NCiAgICAgICAgPC9kaXY+DQogICAgICA8L2Rpdj4NCiAgICAgIDxkaXYgcm9sZT0ibWFpbiIgY2xhc3M9ImNvbnRhaW5lciBib2R5LWNvbnRlbnQgaGlkZS13aGVuLXNlYXJjaCI+DQogICAgICAgIA0KICAgICAgICA8ZGl2IGNsYXNzPSJzaWRlbmF2IGhpZGUtd2hlbi1zZWFyY2giPg0KICAgICAgICAgIDxhIGNsYXNzPSJidG4gdG9jLXRvZ2dsZSBjb2xsYXBzZSIgZGF0YS10b2dnbGU9ImNvbGxhcHNlIiBocmVmPSIjc2lkZXRvZ2dsZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiIGFyaWEtY29udHJvbHM9InNpZGV0b2dnbGUiPlNob3cgLyBIaWRlIFRhYmxlIG9mIENvbnRlbnRzPC9hPg0KICAgICAgICAgIDxkaXYgY2xhc3M9InNpZGV0b2dnbGUgY29sbGFwc2UiIGlkPSJzaWRldG9nZ2xlIj4NCiAgICAgICAgICAgIDxkaXYgaWQ9InNpZGV0b2MiPjwvZGl2Pg0KICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICAgICAgPGRpdiBjbGFzcz0iYXJ0aWNsZSByb3cgZ3JpZC1yaWdodCI+DQogICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTEwIj4NCiAgICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJjb250ZW50IHdyYXAiIGlkPSJfY29udGVudCIgZGF0YS11aWQ9ImFkbWluLWluc3RhbGxpbmciPg0KPGgxIGlkPSJpbnN0YWxsaW5nLS0tLW9taXQtaW4tdG9jLS0tIj5JbnN0YWxsaW5nIDwhLS0gb21pdCBpbiB0b2MgLS0+PC9oMT4NCjwhLS0gbWFya2Rvd25saW50LWRpc2FibGUgTUQwMzYgbm8tZW1waGFzaXMtYXMtaGVhZGluZyAtLT4KCjxwPlRoZSBKZWxseWZpbiBwcm9qZWN0IGFuZCBpdHMgY29udHJpYnV0b3JzIG9mZmVyIGEgbnVtYmVyIG9mIHByZS1idWlsdCBiaW5hcnkgcGFja2FnZXMgdG8gYXNzaXN0IGluIGdldHRpbmcgSmVsbHlmaW4gdXAgYW5kIHJ1bm5pbmcgcXVpY2tseSBvbiBtdWx0aXBsZSBzeXN0ZW1zLjwvcD4KPGgyIGlkPSJjb250YWluZXItaW1hZ2VzIj5Db250YWluZXIgaW1hZ2VzPC9oMj4KPHA+T2ZmaWNpYWwgY29udGFpbmVyIGltYWdlOiA8Y29kZT5qZWxseWZpbi9qZWxseWZpbjwvY29kZT4gPGEgaHJlZj0iaHR0cHM6Ly9odWIuZG9ja2VyLmNvbS9yL2plbGx5ZmluL2plbGx5ZmluIj48aW1nIGFsdD0iRG9ja2VyIFB1bGwgQ291bnQiIHNyYz0iaHR0cHM6Ly9pbWcuc2hpZWxkcy5pby9kb2NrZXIvcHVsbHMvamVsbHlmaW4vamVsbHlmaW4uc3ZnIj48L2E+LjwvcD4KPHA+TGludXhTZXJ2ZXIuaW8gaW1hZ2U6IDxjb2RlPmxpbnV4c2VydmVyL2plbGx5ZmluPC9jb2RlPiA8YSBocmVmPSJodHRwczovL2h1Yi5kb2NrZXIuY29tL3IvbGludXhzZXJ2ZXIvamVsbHlmaW4iPjxpbWcgYWx0PSJEb2NrZXIgUHVsbCBDb3VudCIgc3JjPSJodHRwczovL2ltZy5zaGllbGRzLmlvL2RvY2tlci9wdWxscy9saW51eHNlcnZlci9qZWxseWZpbi5zdmciPjwvYT4uPC9wPgo8cD5ob3RpbyBpbWFnZTogPGNvZGU+aG90aW8vamVsbHlmaW48L2NvZGU+IDxhIGhyZWY9Imh0dHBzOi8vaHViLmRvY2tlci5jb20vci9ob3Rpby9qZWxseWZpbiI+PGltZyBhbHQ9IkRvY2tlciBQdWxsIENvdW50IiBzcmM9Imh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vZG9ja2VyL3B1bGxzL2hvdGlvL2plbGx5ZmluLnN2ZyI+PC9hPi48L3A+CjxwPkplbGx5ZmluIGRpc3RyaWJ1dGVzIDxhIGhyZWY9Imh0dHBzOi8vaHViLmRvY2tlci5jb20vci9qZWxseWZpbi9qZWxseWZpbi8iPm9mZmljaWFsIGNvbnRhaW5lciBpbWFnZXMgb24gRG9ja2VyIEh1YjwvYT4gZm9yIG11bHRpcGxlIGFyY2hpdGVjdHVyZXMuClRoZXNlIGltYWdlcyBhcmUgYmFzZWQgb24gRGViaWFuIGFuZCA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vamVsbHlmaW4vamVsbHlmaW4vYmxvYi9tYXN0ZXIvRG9ja2VyZmlsZSI+YnVpbHQgZGlyZWN0bHkgZnJvbSB0aGUgSmVsbHlmaW4gc291cmNlIGNvZGU8L2E+LjwvcD4KPHA+QWRkaXRpb25hbGx5IHRoZSA8YSBocmVmPSJodHRwczovL3d3dy5saW51eHNlcnZlci5pby8iPkxpbnV4U2VydmVyLmlvPC9hPiBwcm9qZWN0IGFuZCA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaG90aW8iPmhvdGlvPC9hPiBkaXN0cmlidXRlIGltYWdlcyBiYXNlZCBvbiBVYnVudHUgYW5kIHRoZSBvZmZpY2lhbCBKZWxseWZpbiBVYnVudHUgYmluYXJ5IHBhY2thZ2VzLCBzZWUgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2xpbnV4c2VydmVyL2RvY2tlci1qZWxseWZpbi9ibG9iL21hc3Rlci9Eb2NrZXJmaWxlIj5oZXJlPC9hPiBhbmQgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2hvdGlvL2plbGx5ZmluL2Jsb2IvcmVsZWFzZS9saW51eC1hbWQ2NC5Eb2NrZXJmaWxlIj5oZXJlPC9hPiB0byBzZWUgdGhlaXIgRG9ja2VyZmlsZS48L3A+CjxkaXYgY2xhc3M9Ik5PVEUiPjxoNT5Ob3RlPC9oNT48cD5Gb3IgQVJNIGhhcmR3YXJlIGFuZCBSUGksIGl0IGlzIHJlY29tbWVuZGVkIHRvIHVzZSB0aGUgTGludXhTZXJ2ZXIuaW8gb3IgaG90aW8gaW1hZ2Ugc2luY2UgaGFyZHdhcmUgYWNjZWxlcmF0aW9uIHN1cHBvcnQgaXMgbm90IHlldCBhdmFpbGFibGUgb24gdGhlIG5hdGl2ZSBpbWFnZS48L3A+CjwvZGl2Pgo8aDMgaWQ9ImRvY2tlciI+RG9ja2VyPC9oMz4KPHA+PGEgaHJlZj0iaHR0cHM6Ly93d3cuZG9ja2VyLmNvbS8iPkRvY2tlcjwvYT4gYWxsb3dzIHlvdSB0byBydW4gY29udGFpbmVycyBvbiBMaW51eCwgV2luZG93cyBhbmQgTWFjT1MuPC9wPgo8cD5UaGUgYmFzaWMgc3RlcHMgdG8gY3JlYXRlIGFuZCBydW4gYSBKZWxseWZpbiBjb250YWluZXIgdXNpbmcgRG9ja2VyIGFyZSBhcyBmb2xsb3dzLjwvcD4KPG9sPgo8bGk+PHA+Rm9sbG93IHRoZSA8YSBocmVmPSJodHRwczovL2RvY3MuZG9ja2VyLmNvbS9lbmdpbmUvaW5zdGFsbCI+b2ZmaWNhbCBpbnN0YWxsYXRpb24gZ3VpZGUgdG8gaW5zdGFsbCBEb2NrZXI8L2E+LjwvcD4KPC9saT4KPGxpPjxwPkRvd25sb2FkIHRoZSBsYXRlc3QgY29udGFpbmVyIGltYWdlLjwvcD4KPHByZT48Y29kZSBjbGFzcz0ibGFuZy1zaCI+ZG9ja2VyIHB1bGwgamVsbHlmaW4vamVsbHlmaW4KPC9jb2RlPjwvcHJlPjwvbGk+CjxsaT48cD5DcmVhdGUgcGVyc2lzdGVudCBzdG9yYWdlIGZvciBjb25maWd1cmF0aW9uIGFuZCBjYWNoZSBkYXRhLjwvcD4KPHA+RWl0aGVyIGNyZWF0ZSB0d28gZGlyZWN0b3JpZXMgb24gdGhlIGhvc3QgYW5kIHVzZSBiaW5kIG1vdW50czo8L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmctc2giPm1rZGlyIC9wYXRoL3RvL2NvbmZpZwpta2RpciAvcGF0aC90by9jYWNoZQo8L2NvZGU+PC9wcmU+PHA+T3IgY3JlYXRlIHR3byBwZXJzaXN0ZW50IHZvbHVtZXM6PC9wPgo8cHJlPjxjb2RlIGNsYXNzPSJsYW5nLXNoIj5kb2NrZXIgdm9sdW1lIGNyZWF0ZSBqZWxseWZpbi1jb25maWcKZG9ja2VyIHZvbHVtZSBjcmVhdGUgamVsbHlmaW4tY2FjaGUKPC9jb2RlPjwvcHJlPjwvbGk+CjxsaT48cD5DcmVhdGUgYW5kIHJ1biBhIGNvbnRhaW5lciBpbiBvbmUgb2YgdGhlIGZvbGxvd2luZyB3YXlzLjwvcD4KPC9saT4KPC9vbD4KPGRpdiBjbGFzcz0iTk9URSI+PGg1Pk5vdGU8L2g1PjxwPlRoZSBkZWZhdWx0IG5ldHdvcmsgbW9kZSBmb3IgRG9ja2VyIGlzIGJyaWRnZSBtb2RlLiBCcmlkZ2UgbW9kZSB3aWxsIGJlIHVzZWQgaWYgaG9zdCBtb2RlIGlzIG9taXR0ZWQuClVzaW5nIGhvc3QgbmV0d29ya2luZyAoPGNvZGU+LS1uZXQ9aG9zdDwvY29kZT4pIGlzIG9wdGlvbmFsIGJ1dCByZXF1aXJlZCBpbiBvcmRlciB0byB1c2UgRExOQS48L3A+CjwvZGl2Pgo8cD48c3Ryb25nPlVzaW5nIERvY2tlciBjb21tYW5kIGxpbmUgaW50ZXJmYWNlOjwvc3Ryb25nPjwvcD4KPHByZT48Y29kZSBjbGFzcz0ibGFuZy1zaCI+ZG9ja2VyIHJ1biAtZCBcCiAtLW5hbWUgamVsbHlmaW4gXAogLS11c2VyIHVpZDpnaWQgXAogLS1uZXQ9aG9zdCBcCiAtLXZvbHVtZSAvcGF0aC90by9jb25maWc6L2NvbmZpZyBcICMgQWx0ZXJuYXRpdmVseSAtLXZvbHVtZSBqZWxseWZpbi1jb25maWc6L2NvbmZpZwogLS12b2x1bWUgL3BhdGgvdG8vY2FjaGU6L2NhY2hlIFwgIyBBbHRlcm5hdGl2ZWx5IC0tdm9sdW1lIGplbGx5ZmluLWNhY2hlOi9jYWNoZQogLS1tb3VudCB0eXBlPWJpbmQsc291cmNlPS9wYXRoL3RvL21lZGlhLHRhcmdldD0vbWVkaWEgXAogLS1yZXN0YXJ0PXVubGVzcy1zdG9wcGVkIFwKIGplbGx5ZmluL2plbGx5ZmluCjwvY29kZT48L3ByZT48cD5CaW5kIE1vdW50cyBhcmUgbmVlZGVkIHRvIHBhc3MgZm9sZGVycyBmcm9tIHRoZSBob3N0IE9TIHRvIHRoZSBjb250YWluZXIgT1Mgd2hlcmVhcyB2b2x1bWVzIGFyZSBtYWludGFpbmVkIGJ5IERvY2tlciBhbmQgY2FuIGJlIGNvbnNpZGVyZWQgZWFzaWVyIHRvIGJhY2t1cCBhbmQgY29udHJvbCBieSBleHRlcm5hbCBwcm9ncmFtcy4KRm9yIGEgc2ltcGxlIHNldHVwLCBpdCYjMzk7cyBjb25zaWRlcmVkIGVhc2llciB0byB1c2UgQmluZCBNb3VudHMgaW5zdGVhZCBvZiB2b2x1bWVzLgpNdWx0aXBsZSBtZWRpYSBsaWJyYXJpZXMgY2FuIGJlIGJpbmQgbW91bnRlZCBpZiBuZWVkZWQ6PC9wPgo8cHJlPjxjb2RlIGNsYXNzPSJsYW5nLXNoIj4tLW1vdW50IHR5cGU9YmluZCxzb3VyY2U9L3BhdGgvdG8vbWVkaWExLHRhcmdldD0vbWVkaWExCi0tbW91bnQgdHlwZT1iaW5kLHNvdXJjZT0vcGF0aC90by9tZWRpYTIsdGFyZ2V0PS9tZWRpYTIscmVhZG9ubHkKLi4uZXRjCjwvY29kZT48L3ByZT48ZGl2IGNsYXNzPSJOT1RFIj48aDU+Tm90ZTwvaDU+PHA+VGhlcmUgaXMgY3VycmVudGx5IGFuIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9kb2NrZXIvZm9yLWxpbnV4L2lzc3Vlcy83ODgiPmlzc3VlPC9hPiB3aXRoIHJlYWQtb25seSBtb3VudHMgaW4gRG9ja2VyLgpJZiB0aGVyZSBhcmUgc3VibW91bnRzIHdpdGhpbiB0aGUgbWFpbiBtb3VudCwgdGhlIHN1Ym1vdW50cyBhcmUgcmVhZC13cml0ZSBjYXBhYmxlLjwvcD4KPC9kaXY+CjxwPjxzdHJvbmc+VXNpbmcgRG9ja2VyIENvbXBvc2U6PC9zdHJvbmc+PC9wPgo8cD5DcmVhdGUgYSA8Y29kZT5kb2NrZXItY29tcG9zZS55bWw8L2NvZGU+IGZpbGUgd2l0aCB0aGUgZm9sbG93aW5nIGNvbnRlbnRzOjwvcD4KPHByZT48Y29kZSBjbGFzcz0ibGFuZy15bWwiPnZlcnNpb246ICZxdW90OzMuNSZxdW90OwpzZXJ2aWNlczoKICBqZWxseWZpbjoKICAgIGltYWdlOiBqZWxseWZpbi9qZWxseWZpbgogICAgY29udGFpbmVyX25hbWU6IGplbGx5ZmluCiAgICB1c2VyOiB1aWQ6Z2lkCiAgICBuZXR3b3JrX21vZGU6ICZxdW90O2hvc3QmcXVvdDsKICAgIHZvbHVtZXM6CiAgICAgIC0gL3BhdGgvdG8vY29uZmlnOi9jb25maWcKICAgICAgLSAvcGF0aC90by9jYWNoZTovY2FjaGUKICAgICAgLSAvcGF0aC90by9tZWRpYTovbWVkaWEKICAgICAgLSAvcGF0aC90by9tZWRpYTI6L21lZGlhMjpybwogICAgcmVzdGFydDogJnF1b3Q7dW5sZXNzLXN0b3BwZWQmcXVvdDsKICAgICMgT3B0aW9uYWwgLSBhbHRlcm5hdGl2ZSBhZGRyZXNzIHVzZWQgZm9yIGF1dG9kaXNjb3ZlcnkKICAgIGVudmlyb25tZW50OgogICAgICAtIEpFTExZRklOX1B1Ymxpc2hlZFNlcnZlclVybD1odHRwOi8vZXhhbXBsZS5jb20KPC9jb2RlPjwvcHJlPjxwPlRoZW4gd2hpbGUgaW4gdGhlIHNhbWUgZm9sZGVyIGFzIHRoZSA8Y29kZT5kb2NrZXItY29tcG9zZS55bWw8L2NvZGU+IHJ1bjo8L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmctc2giPmRvY2tlci1jb21wb3NlIHVwCjwvY29kZT48L3ByZT48cD5UbyBydW4gdGhlIGNvbnRhaW5lciBpbiBiYWNrZ3JvdW5kIGFkZCA8Y29kZT4tZDwvY29kZT4gdG8gdGhlIGFib3ZlIGNvbW1hbmQuPC9wPgo8cD5Zb3UgY2FuIGxlYXJuIG1vcmUgYWJvdXQgdXNpbmcgRG9ja2VyIGJ5IDxhIGhyZWY9Imh0dHBzOi8vZG9jcy5kb2NrZXIuY29tLyI+cmVhZGluZyB0aGUgb2ZmaWNpYWwgRG9ja2VyIGRvY3VtZW50YXRpb248L2E+LjwvcD4KPGgzIGlkPSJ1bnJhaWQtZG9ja2VyIj5VbnJhaWQgRG9ja2VyPC9oMz4KPHA+QW4gVW5yYWlkIERvY2tlciB0ZW1wbGF0ZSBpcyBhdmFpbGFibGUgaW4gdGhlIHJlcG9zaXRvcnkuPC9wPgo8b2w+CjxsaT48cD5PcGVuIHRoZSB1blJhaWQgR1VJIChhdCBsZWFzdCB1blJhaWQgNi41KSBhbmQgY2xpY2sgb24gdGhlIDxjb2RlPkRvY2tlcjwvY29kZT4gdGFiLjwvcD4KPC9saT4KPGxpPjxwPkFkZCB0aGUgZm9sbG93aW5nIGxpbmUgdW5kZXIgJnF1b3Q7VGVtcGxhdGUgUmVwb3NpdG9yaWVzJnF1b3Q7IGFuZCBzYXZlIHRoZSBvcHRpb25zLjwvcD4KPHByZT48Y29kZSBjbGFzcz0ibGFuZy1kYXRhIj5odHRwczovL2dpdGh1Yi5jb20vamVsbHlmaW4vamVsbHlmaW4vYmxvYi9tYXN0ZXIvZGVwbG95bWVudC91bnJhaWQvZG9ja2VyLXRlbXBsYXRlcwo8L2NvZGU+PC9wcmU+PC9saT4KPGxpPjxwPkNsaWNrICZxdW90O0FkZCBDb250YWluZXImcXVvdDsgYW5kIHNlbGVjdCAmcXVvdDtqZWxseWZpbiZxdW90Oy48L3A+CjwvbGk+CjxsaT48cD5BZGp1c3QgYW55IHJlcXVpcmVkIHBhdGhzIGFuZCBzYXZlIHlvdXIgY2hhbmdlcy48L3A+CjwvbGk+Cjwvb2w+CjxoMyBpZD0ia3ViZXJuZXRlcyI+S3ViZXJuZXRlczwvaDM+CjxwPkEgY29tbXVuaXR5IHByb2plY3QgdG8gZGVwbG95IEplbGx5ZmluIG9uIEt1YmVybmV0ZXMtYmFzZWQgcGxhdGZvcm1zIGV4aXN0cyA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vaG9tZS1jbHVzdGVyL2plbGx5ZmluLW9wZW5zaGlmdCI+YXQgdGhlaXIgcmVwb3NpdG9yeTwvYT4uCkFueSBpc3N1ZXMgb3IgZmVhdHVyZSByZXF1ZXN0cyByZWxhdGVkIHRvIGRlcGxveW1lbnQgb24gS3ViZXJuZXRlcy1iYXNlZCBwbGF0Zm9ybXMgc2hvdWxkIGJlIGZpbGVkIHRoZXJlLjwvcD4KPGgzIGlkPSJwb2RtYW4iPlBvZG1hbjwvaDM+CjxwPjxhIGhyZWY9Imh0dHBzOi8vcG9kbWFuLmlvIj5Qb2RtYW48L2E+IGFsbG93cyB5b3UgdG8gcnVuIHJvb3RsZXNzIGNvbnRhaW5lcnMuCkl0JiMzOTtzIGFsc28gdGhlIG9mZmljaWFsbHkgc3VwcG9ydGVkIGNvbnRhaW5lciBzb2x1dGlvbiBvbiBGZWRvcmEgTGludXggYW5kIGl0cyBkZXJpdmF0aXZlcyBzdWNoIGFzIENlbnRPUyBTdHJlYW0gYW5kIFJIRUwuClN0ZXBzIHRvIHJ1biBKZWxseWZpbiB1c2luZyBQb2RtYW4gYXJlIHNpbWlsYXIgdG8gdGhlIERvY2tlciBzdGVwcy48L3A+CjxvbD4KPGxpPjxwPkluc3RhbGwgUG9kbWFuOjwvcD4KPHByZT48Y29kZSBjbGFzcz0ibGFuZy1zaCI+c3VkbyBkbmYgaW5zdGFsbCAteSBwb2RtYW4KPC9jb2RlPjwvcHJlPjwvbGk+CjxsaT48cD5DcmVhdGUgYW5kIHJ1biBhIEplbGx5ZmluIGNvbnRhaW5lcjo8L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmctc2giPnBvZG1hbiBydW4gXAogLS1kZXRhY2ggXAogLS1sYWJlbCAmcXVvdDtpby5jb250YWluZXJzLmF1dG91cGRhdGU9cmVnaXN0cnkmcXVvdDsgXAogLS1uYW1lIG15amVsbHlmaW4gXAogLS1wdWJsaXNoIDgwOTY6ODA5Ni90Y3AgXAogLS1ybSBcCiAtLXVzZXIgJChpZCAtdSk6JChpZCAtZykgXAogLS11c2VybnMga2VlcC1pZCBcCiAtLXZvbHVtZSBqZWxseWZpbi1jYWNoZTovY2FjaGU6WiBcCiAtLXZvbHVtZSBqZWxseWZpbi1jb25maWc6L2NvbmZpZzpaIFwKIC0tbW91bnQgdHlwZT1iaW5kLHNvdXJjZT0vcGF0aC90by9tZWRpYSxkZXN0aW5hdGlvbj0vbWVkaWEscm89dHJ1ZSBcCiBkb2NrZXIuaW8vamVsbHlmaW4vamVsbHlmaW46bGF0ZXN0CjwvY29kZT48L3ByZT48L2xpPgo8bGk+PHA+T3BlbiB0aGUgbmVjZXNzYXJ5IHBvcnRzIGluIHlvdXIgbWFjaGluZSYjMzk7cyBmaXJld2FsbCBpZiB5b3Ugd2lzaCB0byBwZXJtaXQgYWNjZXNzIHRvIHRoZSBKZWxseWZpbiBzZXJ2ZXIgZnJvbSBvdXRzaWRlIHRoZSBob3N0LgpUaGlzIGlzIG5vdCBkb25lIGF1dG9tYXRpY2FsbHkgd2hlbiB1c2luZyByb290bGVzcyBQb2RtYW4uCklmIHlvdXIgZGlzdHJpYnV0aW9uIHVzZXMgPGNvZGU+ZmlyZXdhbGxkPC9jb2RlPiwgdGhlIGZvbGxvd2luZyBjb21tYW5kcyBzYXZlIGFuZCBsb2FkIGEgbmV3IGZpcmV3YWxsIHJ1bGUgb3BlbmluZyB0aGUgSFRUUCBwb3J0IDxjb2RlPjgwOTY8L2NvZGU+IGZvciBUQ1AgY29ubmVjdGlvbnMuPC9wPgo8cHJlPjxjb2RlIGNsYXNzPSJsYW5nLXNoIj5zdWRvIGZpcmV3YWxsLWNtZCAtLWFkZC1wb3J0PTgwOTYvdGNwIC0tcGVybWFuZW50CnN1ZG8gZmlyZXdhbGwtY21kIC0tcmVsb2FkCjwvY29kZT48L3ByZT48L2xpPgo8L29sPgo8cD5Qb2RtYW4gZG9lc24mIzM5O3QgcmVxdWlyZSByb290IGFjY2VzcyB0byBydW4gY29udGFpbmVycywgYWx0aG91Z2ggdGhlcmUgYXJlIHNvbWUgZGV0YWlscyB0byBiZSBtaW5kZnVsIG9mOyBzZWUgPGEgaHJlZj0iaHR0cHM6Ly9kb2NzLnBvZG1hbi5pby9lbi9sYXRlc3QvbWFya2Rvd24vcG9kbWFuLjEuaHRtbCNyb290bGVzcy1tb2RlIj50aGUgcmVsZXZhbnQgZG9jdW1lbnRhdGlvbjwvYT4uCkZvciBzZWN1cml0eSwgdGhlIEplbGx5ZmluIGNvbnRhaW5lciBzaG91bGQgYmUgcnVuIHVzaW5nIHJvb3RsZXNzIFBvZG1hbi4KRnVydGhlcm1vcmUsIGl0IGlzIHNhZmVyIHRvIHJ1biBhcyBhIG5vbi1yb290IHVzZXIgd2l0aGluIHRoZSBjb250YWluZXIuClRoZSA8Y29kZT4tLXVzZXI8L2NvZGU+IG9wdGlvbiB3aWxsIHJ1biB3aXRoIHRoZSBwcm92aWRlZCB1c2VyIGlkIGFuZCBncm91cCBpZCA8ZW0+aW5zaWRlPC9lbT4gdGhlIGNvbnRhaW5lci4KVGhlIDxjb2RlPi0tdXNlcm5zIGtlZXAtaWQ8L2NvZGU+IGZsYWcgZW5zdXJlcyB0aGF0IGN1cnJlbnQgdXNlciYjMzk7cyBpZCBpcyBtYXBwZWQgdG8gdGhlIG5vbi1yb290IHVzZXImIzM5O3MgaWQgaW5zaWRlIHRoZSBjb250YWluZXIuClRoaXMgZW5zdXJlcyB0aGF0IHRoZSBwZXJtaXNzaW9ucyBmb3IgZGlyZWN0b3JpZXMgYmluZC1tb3VudGVkIGluc2lkZSB0aGUgY29udGFpbmVyIGFyZSBtYXBwZWQgY29ycmVjdGx5IGJldHdlZW4gdGhlIHVzZXIgcnVubmluZyBQb2RtYW4gYW5kIHRoZSB1c2VyIHJ1bm5pbmcgSmVsbHlmaW4gaW5zaWRlIHRoZSBjb250YWluZXIuPC9wPgo8cD5LZWVwIGluIG1pbmQgdGhhdCB0aGUgPGNvZGU+LS1sYWJlbCAmcXVvdDtpby5jb250YWluZXJzLmF1dG91cGRhdGU9aW1hZ2UmcXVvdDs8L2NvZGU+IGZsYWcgd2lsbCBhbGxvdyB0aGUgY29udGFpbmVyIHRvIGJlIGF1dG9tYXRpY2FsbHkgdXBkYXRlZCB2aWEgPGNvZGU+cG9kbWFuIGF1dG8tdXBkYXRlPC9jb2RlPi48L3A+CjxwPlRoZSA8Y29kZT56PC9jb2RlPiAoc2hhcmVkIHZvbHVtZSkgb3IgPGNvZGU+WjwvY29kZT4gKHByaXZhdGUgdm9sdW1lKSB2b2x1bWUgb3B0aW9uIHRlbGxzIFBvZG1hbiB0byByZWxhYmVsIGZpbGVzIGluc2lkZSB0aGUgdm9sdW1lcyBhcyBhcHByb3ByaWF0ZSwgZm9yIHN5c3RlbXMgcnVubmluZyBTRUxpbnV4LjwvcD4KPHA+UmVwbGFjZSA8Y29kZT5qZWxseWZpbi1jb25maWc8L2NvZGU+IGFuZCA8Y29kZT5qZWxseWZpbi1jYWNoZTwvY29kZT4gd2l0aCA8Y29kZT4vcGF0aC90by9jb25maWc8L2NvZGU+IGFuZCA8Y29kZT4vcGF0aC90by9jYWNoZTwvY29kZT4gaWYgeW91IHdpc2ggdG8gdXNlIGJpbmQgbW91bnRzLjwvcD4KPHA+VGhpcyBleGFtcGxlIG1vdW50cyB5b3VyIG1lZGlhIGxpYnJhcnkgcmVhZC1vbmx5IGJ5IHNldHRpbmcgPGNvZGU+cm89dHJ1ZTwvY29kZT47IHNldCB0aGlzIHRvIDxjb2RlPnJvPWZhbHNlPC9jb2RlPiBpZiB5b3Ugd2lzaCB0byBnaXZlIEplbGx5ZmluIHdyaXRlIGFjY2VzcyB0byB5b3VyIG1lZGlhLjwvcD4KPGg0IGlkPSJtYW5hZ2luZy12aWEtc3lzdGVtZCI+TWFuYWdpbmcgdmlhIFN5c3RlbWQ8L2g0Pgo8cD5UbyBydW4gYXMgYSBzeXN0ZW1kIHNlcnZpY2Ugc2VlIDxhIGhyZWY9Imh0dHBzOi8vd3d3LnJlZGhhdC5jb20vc3lzYWRtaW4vcG9kbWFuLXNoYXJlYWJsZS1zeXN0ZW1kLXNlcnZpY2VzIj5SdW5uaW5nIGNvbnRhaW5lcnMgd2l0aCBQb2RtYW4gYW5kIHNoYXJlYWJsZSBzeXN0ZW1kIHNlcnZpY2VzPC9hPi48L3A+CjxwPkFzIGFsd2F5cyBpdCBpcyByZWNvbW1lbmRlZCB0byBydW4gdGhlIGNvbnRhaW5lciByb290bGVzcy4gVGhlcmVmb3JlIHdlIHdhbnQgdG8gbWFuYWdlIHRoZSBjb250YWluZXIgd2l0aCB0aGUgPGNvZGU+c3lzdGVtZCAtLXVzZXI8L2NvZGU+IGZsYWcuPC9wPgo8b2w+CjxsaT48cD5GaXJzdCB3ZSBoYXZlIHRvIGdlbmVyYXRlIHRoZSBjb250YWluZXIgYXMgc2VlbiBhYm92ZS48L3A+CjwvbGk+CjxsaT48cD5OZXh0IGdlbmVyYXRlIHRoZSBzeXN0ZW1kLnNlcnZpY2UgZmlsZS48L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmctc2giPnBvZG1hbiBnZW5lcmF0ZSBzeXN0ZW1kIC0tbmV3IC0tbmFtZSBteWplbGx5ZmluICZndDsgfi8uY29uZmlnL3N5c3RlbWQvdXNlci9jb250YWluZXItbXlqZWxseWZpbi5zZXJ2aWNlCjwvY29kZT48L3ByZT48L2xpPgo8bGk+PHA+VmVyaWZ5IGFuZCBlZGl0IHRoZSBzeXN0ZW1kLnNlcnZpY2UgZmlsZSB0byB5b3VyIGxpa2luZy4KVG8gZnVydGhlciBzYW5kYm94IHNlZSA8YSBocmVmPSJodHRwczovL3d3dy5yZWRoYXQuY29tL3N5c2FkbWluL21hc3RlcmluZy1zeXN0ZW1kIj5NYXN0ZXJpbmcgc3lzdGVtZDogU2VjdXJpbmcgYW5kIHNhbmRib3hpbmcgYXBwbGljYXRpb25zIGFuZCBzZXJ2aWNlczwvYT4uCkFuIGV4YW1wbGUgc2VydmljZSBmaWxlIGlzIHNob3duIGJlbG93LiA8c3Ryb25nPkRvIG5vdCBibGluZGx5IGNvcHk8L3N0cm9uZz4sIG9uZSBzaG91bGQgbWFrZSBlZGl0cyB0byB0aGUgc2VydmljZSBmaWxlIGdlbmVyYXRlZCBieSBwb2RtYW4uPC9wPgo8cHJlPjxjb2RlIGNsYXNzPSJsYW5nLXNoIj4jIGNvbnRhaW5lci1teWplbGx5ZmluLnNlcnZpY2UKIyBhdXRvZ2VuZXJhdGVkIGJ5IFBvZG1hbiAyLjIuMQojIFdlZCBGZWIgMTcgMjM6NDk6MjQgRVNUIDIwMjEKCltVbml0XQpEZXNjcmlwdGlvbj1Qb2RtYW4gY29udGFpbmVyLW15amVsbHlmaW4uc2VydmljZQpEb2N1bWVudGF0aW9uPW1hbjpwb2RtYW4tZ2VuZXJhdGUtc3lzdGVtZCgxKQpXYW50cz1uZXR3b3JrLnRhcmdldApBZnRlcj1uZXR3b3JrLW9ubGluZS50YXJnZXQKCltTZXJ2aWNlXQpFbnZpcm9ubWVudD1QT0RNQU5fU1lTVEVNRF9VTklUPSVuClJlc3RhcnQ9b24tZmFpbHVyZQpFeGVjU3RhcnRQcmU9L2Jpbi9ybSAtZiAldC9jb250YWluZXItbXlqZWxseWZpbi5waWQgJXQvY29udGFpbmVyLW15amVsbHlmaW4uY3RyLWlkCkV4ZWNTdGFydD0vdXNyL2Jpbi9wb2RtYW4gcnVuIC0tY29ubW9uLXBpZGZpbGUgJXQvY29udGFpbmVyLW15amVsbHlmaW4ucGlkIC0tY2lkZmlsZSAldC9jb250YWluZXItbXlqZWxseWZpbi5jdHItaWQgLS1jZ3JvdXBzPW5vLWNvbm1vbiAtZCAtLXJlcGxhY2UgLS1jZ3JvdXAtbWFuYWdlcj1zeXN0ZW1kIC0tdm9sdW1lIGplbGx5ZmluLWNvbmZpZzovY29uZmlnOnogLS12b2x1bWUgamVsbHlmaW4tY2FjaGU6L2NhY2hlOnogLS12b2x1bWUgamVsbHlmaW4tbWVkaWE6L21lZGlhOnogLXAgODA5Njo4MDk2IC0tdXNlcm5zIGtlZXAtaWQgLS1uYW1lIG15amVsbHlmaW4gamVsbHlmaW4vamVsbHlmaW4KRXhlY1N0b3A9L3Vzci9iaW4vcG9kbWFuIHN0b3AgLS1pZ25vcmUgLS1jaWRmaWxlICV0L2NvbnRhaW5lci1teWplbGx5ZmluLmN0ci1pZCAtdCAxMApFeGVjU3RvcFBvc3Q9L3Vzci9iaW4vcG9kbWFuIHJtIC0taWdub3JlIC1mIC0tY2lkZmlsZSAldC9jb250YWluZXItbXlqZWxseWZpbi5jdHItaWQKUElERmlsZT0ldC9jb250YWluZXItbXlqZWxseWZpbi5waWQKS2lsbE1vZGU9Y29udHJvbC1ncm91cApUeXBlPWZvcmtpbmcKCiMgU2VjdXJpdHkgRmVhdHVyZXMKUHJpdmF0ZVRtcD15ZXMKTm9OZXdQcml2aWxlZ2VzPXllcwpQcm90ZWN0U3lzdGVtPXN0cmljdApQcm90ZWN0SG9tZT15ZXMKUHJvdGVjdEtlcm5lbFR1bmFibGVzPXllcwpQcm90ZWN0Q29udHJvbEdyb3Vwcz15ZXMKUHJpdmF0ZU1vdW50cz15ZXMKUHJvdGVjdEhvc3RuYW1lPXllcwoKW0luc3RhbGxdCldhbnRlZEJ5PW11bHRpLXVzZXIudGFyZ2V0IGRlZmF1bHQudGFyZ2V0CjwvY29kZT48L3ByZT48L2xpPgo8bGk+PHA+U3RvcCB0aGUgcnVubmluZyBKZWxseWZpbiBjb250YWluZXIuPC9wPgo8cHJlPjxjb2RlIGNsYXNzPSJsYW5nLXNoIj5wb2RtYW4gc3RvcCBteWplbGx5ZmluCjwvY29kZT48L3ByZT48L2xpPgo8bGk+PHA+U3RhcnQgYW5kIGVuYWJsZSB0aGUgc2VydmljZS48L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmctc2giPnN5c3RlbWN0bCAtLXVzZXIgZW5hYmxlIC0tbm93IGNvbnRhaW5lci1teWplbGx5ZmluLnNlcnZpY2UKPC9jb2RlPjwvcHJlPjxwPiBBdCB0aGlzIHBvaW50IHRoZSBjb250YWluZXIgd2lsbCBvbmx5IHN0YXJ0IHdoZW4gdGhlIHVzZXIgbG9ncyBpbiBhbmQgc2h1dGRvd24gd2hlbiB0aGV5IGxvZyBvZmYuCiBUbyBoYXZlIHRoZSBjb250YWluZXIgc3RhcnQgYXMgdGhlIHVzZXIgYXQgZmlyc3QgbG9naW4gd2UmIzM5O2xsIGhhdmUgdG8gaW5jbHVkZSBvbmUgbW9yZSBvcHRpb24uPC9wPgo8cHJlPjxjb2RlIGNsYXNzPSJsYW5nLXNoIj5sb2dpbmN0bCBlbmFibGUtbGluZ2VyICRVU0VSCjwvY29kZT48L3ByZT48L2xpPgo8bGk+PHA+VG8gZW5hYmxlIFBvZG1hbiBhdXRvLXVwZGF0ZXMsIGVuYWJsZSB0aGUgbmVjZXNzYXJ5IHN5c3RlbWQgdGltZXIuPC9wPgo8cHJlPjxjb2RlIGNsYXNzPSJsYW5nLXNoIj5zeXN0ZW1jdGwgLS11c2VyIGVuYWJsZSAtLW5vdyBwb2RtYW4tYXV0by11cGRhdGUudGltZXIKPC9jb2RlPjwvcHJlPjwvbGk+Cjwvb2w+CjxoMyBpZD0iY2xvdWRyb24iPkNsb3Vkcm9uPC9oMz4KPHA+Q2xvdWRyb24gaXMgYSBjb21wbGV0ZSBzb2x1dGlvbiBmb3IgcnVubmluZyBhcHBzIG9uIHlvdXIgc2VydmVyIGFuZCBrZWVwaW5nIHRoZW0gdXAtdG8tZGF0ZSBhbmQgc2VjdXJlLgpPbiB5b3VyIENsb3Vkcm9uIHlvdSBjYW4gaW5zdGFsbCBKZWxseWZpbiB3aXRoIGEgZmV3IGNsaWNrcyB2aWEgdGhlIDxhIGhyZWY9Imh0dHBzOi8vY2xvdWRyb24uaW8vc3RvcmUvb3JnLmplbGx5ZmluLmNsb3Vkcm9uYXBwLmh0bWwiPmFwcCBsaWJyYXJ5PC9hPiBhbmQgdXBkYXRlcyBhcmUgZGVsaXZlcmVkIGF1dG9tYXRpY2FsbHkuPC9wPgo8cD5UaGUgc291cmNlIGNvZGUgZm9yIHRoZSBwYWNrYWdlIGNhbiBiZSBmb3VuZCA8YSBocmVmPSJodHRwczovL2dpdC5jbG91ZHJvbi5pby9jbG91ZHJvbi9qZWxseWZpbi1hcHAiPmhlcmU8L2E+LgpBbnkgaXNzdWVzIG9yIGZlYXR1cmUgcmVxdWVzdHMgcmVsYXRlZCB0byBkZXBsb3ltZW50IG9uIENsb3Vkcm9uIHNob3VsZCBiZSBmaWxlZCB0aGVyZS48L3A+CjxoMiBpZD0id2luZG93cy14NjQiPldpbmRvd3MgKHg2NCk8L2gyPgo8cD5XaW5kb3dzIGluc3RhbGxlcnMgYW5kIGJ1aWxkcyBpbiBaSVAgYXJjaGl2ZSBmb3JtYXQgYXJlIGF2YWlsYWJsZSA8YSBocmVmPSJodHRwczovL2plbGx5ZmluLm9yZy9kb3dubG9hZHMvI3dpbmRvd3MiPmhlcmU8L2E+LjwvcD4KPGRpdiBjbGFzcz0iV0FSTklORyI+PGg1Pldhcm5pbmc8L2g1PjxwPklmIHlvdSBpbnN0YWxsZWQgYSB2ZXJzaW9uIHByaW9yIHRvIDEwLjQuMCB1c2luZyBhIFBvd2VyU2hlbGwgc2NyaXB0LCB5b3Ugd2lsbCBuZWVkIHRvIG1hbnVhbGx5IHJlbW92ZSB0aGUgc2VydmljZSB1c2luZyB0aGUgY29tbWFuZCA8Y29kZT5uc3NtIHJlbW92ZSBKZWxseWZpbjwvY29kZT4gYW5kIHVuaW5zdGFsbCB0aGUgc2VydmVyIGJ5IHJlbW92ZSBhbGwgdGhlIGZpbGVzIG1hbnVhbGx5LgpBbHNvIG9uZSBtaWdodCBuZWVkIHRvIG1vdmUgdGhlIGRhdGEgZmlsZXMgdG8gdGhlIGNvcnJlY3QgbG9jYXRpb24sIG9yIHBvaW50IHRoZSBpbnN0YWxsZXIgYXQgdGhlIG9sZCBsb2NhdGlvbi48L3A+CjwvZGl2Pgo8ZGl2IGNsYXNzPSJXQVJOSU5HIj48aDU+V2FybmluZzwvaDU+PHA+VGhlIEJhc2ljIEluc3RhbGwgaXMgdGhlIHJlY29tbWVuZGVkIHdheSB0byBydW4gdGhlIEplbGx5ZmluIFNlcnZlci4KVXNpbmcgdGhlIEFkdmFuY2VkL1NlcnZpY2UgbW9kZSBtYXkgZXhwZXJpZW5jZSBGRm1wZWcgaGFyZHdhcmUgYWNjZWxlcmF0aW9uIGlzc3VlcywgYW5kIGlzIG9ubHkgZm9yIGFkdmFuY2VkIHVzZXJzLjwvcD4KPC9kaXY+CjxoMyBpZD0iaW5zdGFsbC11c2luZy1pbnN0YWxsZXIteDY0Ij5JbnN0YWxsIHVzaW5nIEluc3RhbGxlciAoeDY0KTwvaDM+CjxwPjxzdHJvbmc+SW5zdGFsbDwvc3Ryb25nPjwvcD4KPG9sPgo8bGk+RG93bmxvYWQgdGhlIGxhdGVzdCB2ZXJzaW9uLjwvbGk+CjxsaT5SdW4gdGhlIGluc3RhbGxlci48L2xpPgo8bGk+KE9wdGlvbmFsKSBXaGVuIGluc3RhbGxpbmcgYXMgYSBzZXJ2aWNlIChub3QgcmVjb21tZW5kZWQpLCBwaWNrIHRoZSBzZXJ2aWNlIGFjY291bnQgdHlwZS48L2xpPgo8bGk+SWYgZXZlcnl0aGluZyB3YXMgY29tcGxldGVkIHN1Y2Nlc3NmdWxseSwgSmVsbHlmaW4gaXMgbm93IHJ1bm5pbmcuPC9saT4KPGxpPk9wZW4geW91ciBicm93c2VyIGF0IDxhIGhyZWY9Imh0dHA6Ly95b3VyX2xvY2FsX0lQX2FkZHJlc3M6ODA5NiI+aHR0cDovL3lvdXJfbG9jYWxfSVBfYWRkcmVzczo4MDk2PC9hPiB0byBmaW5pc2ggc2V0dGluZyB1cCBKZWxseWZpbi48L2xpPgo8L29sPgo8cD48c3Ryb25nPlVwZGF0ZTwvc3Ryb25nPjwvcD4KPG9sPgo8bGk+RG93bmxvYWQgdGhlIGxhdGVzdCB2ZXJzaW9uLjwvbGk+CjxsaT5DbG9zZSBvciBTdG9wIEplbGx5ZmluIGlmIGl0IGlzIHJ1bm5pbmcuPC9saT4KPGxpPlJ1biB0aGUgaW5zdGFsbGVyLjwvbGk+CjxsaT5JZiBldmVyeXRoaW5nIHdhcyBjb21wbGV0ZWQgc3VjY2Vzc2Z1bGx5LCB0aGUgbmV3IHZlcnNpb24gaXMgaW5zdGFsbGVkLjwvbGk+Cjwvb2w+CjxwPjxzdHJvbmc+VW5pbnN0YWxsPC9zdHJvbmc+PC9wPgo8b2w+CjxsaT5HbyB0byA8Y29kZT5BZGQgb3IgcmVtb3ZlIHByb2dyYW1zPC9jb2RlPiBpbiBXaW5kb3dzLjwvbGk+CjxsaT5TZWFyY2ggZm9yIEplbGx5ZmluLjwvbGk+CjxsaT5DbGljayBVbmluc3RhbGwuPC9saT4KPC9vbD4KPGgzIGlkPSJtYW51YWwtaW5zdGFsbGF0aW9uLXg4Nng2NCI+TWFudWFsIEluc3RhbGxhdGlvbiAoeDg2L3g2NCk8L2gzPgo8cD48c3Ryb25nPkluc3RhbGw8L3N0cm9uZz48L3A+CjxvbD4KPGxpPkRvd25sb2FkIGFuZCBleHRyYWN0IHRoZSBsYXRlc3QgdmVyc2lvbi48L2xpPgo8bGk+Q3JlYXRlIGEgZm9sZGVyIDxjb2RlPmplbGx5ZmluPC9jb2RlPiBhdCB5b3VyIHByZWZlcnJlZCBpbnN0YWxsIGxvY2F0aW9uLjwvbGk+CjxsaT5Db3B5IHRoZSBleHRyYWN0ZWQgZm9sZGVyIGludG8gdGhlIDxjb2RlPmplbGx5ZmluPC9jb2RlPiBmb2xkZXIgYW5kIHJlbmFtZSBpdCB0byA8Y29kZT5zeXN0ZW08L2NvZGU+LjwvbGk+CjxsaT48cD5DcmVhdGUgPGNvZGU+amVsbHlmaW4uYmF0PC9jb2RlPiB3aXRoaW4geW91ciA8Y29kZT5qZWxseWZpbjwvY29kZT4gZm9sZGVyIGNvbnRhaW5pbmc6PC9wPgo8dWw+CjxsaT48cD5UbyB1c2UgdGhlIGRlZmF1bHQgbGlicmFyeS9kYXRhIGxvY2F0aW9uIGF0IDxjb2RlPiVsb2NhbGFwcGRhdGElPC9jb2RlPjo8L3A+CjxwcmU+PGNvZGUgY2xhc3M9ImxhbmctY21kIj4mbHQ7LS1Zb3VyIGluc3RhbGwgcGF0aC0tJmd0O1xqZWxseWZpblxzeXN0ZW1camVsbHlmaW4uZXhlCjwvY29kZT48L3ByZT48L2xpPgo8bGk+PHA+VG8gdXNlIGEgY3VzdG9tIGxpYnJhcnkvZGF0YSBsb2NhdGlvbiAoUGF0aCBhZnRlciB0aGUgLWQgcGFyYW1ldGVyKTo8L3A+CjxwcmU+PGNvZGUgY2xhc3M9ImxhbmctY21kIj4mbHQ7LS1Zb3VyIGluc3RhbGwgcGF0aC0tJmd0O1xqZWxseWZpblxzeXN0ZW1camVsbHlmaW4uZXhlIC1kICZsdDstLVlvdXIgaW5zdGFsbCBwYXRoLS0mZ3Q7XGplbGx5ZmluXGRhdGEKPC9jb2RlPjwvcHJlPjwvbGk+CjxsaT48cD5UbyB1c2UgYSBjdXN0b20gbGlicmFyeS9kYXRhIGxvY2F0aW9uIChQYXRoIGFmdGVyIHRoZSAtZCBwYXJhbWV0ZXIpIGFuZCBkaXNhYmxlIHRoZSBhdXRvLXN0YXJ0IG9mIHRoZSB3ZWJhcHA6PC9wPgo8cHJlPjxjb2RlIGNsYXNzPSJsYW5nLWNtZCI+Jmx0Oy0tWW91ciBpbnN0YWxsIHBhdGgtLSZndDtcamVsbHlmaW5cc3lzdGVtXGplbGx5ZmluLmV4ZSAtZCAmbHQ7LS1Zb3VyIGluc3RhbGwgcGF0aC0tJmd0O1xqZWxseWZpblxkYXRhIC1ub2F1dG9ydW53ZWJhcHAKPC9jb2RlPjwvcHJlPjwvbGk+CjwvdWw+CjwvbGk+CjxsaT48cD5SdW48L3A+CjxwcmU+PGNvZGUgY2xhc3M9ImxhbmctY21kIj5qZWxseWZpbi5iYXQKPC9jb2RlPjwvcHJlPjwvbGk+CjxsaT48cD5PcGVuIHlvdXIgYnJvd3NlciBhdCA8Y29kZT5odHRwOi8vJmx0Oy0tU2VydmVyLUlQLS0mZ3Q7OjgwOTY8L2NvZGU+IChpZiBhdXRvLXN0YXJ0IG9mIHdlYmFwcCBpcyBkaXNhYmxlZCk8L3A+CjwvbGk+Cjwvb2w+CjxwPjxzdHJvbmc+VXBkYXRlPC9zdHJvbmc+PC9wPgo8b2w+CjxsaT5TdG9wIEplbGx5ZmluPC9saT4KPGxpPlJlbmFtZSB0aGUgSmVsbHlmaW4gPGNvZGU+c3lzdGVtPC9jb2RlPiBmb2xkZXIgdG8gPGNvZGU+c3lzdGVtLWJhazwvY29kZT48L2xpPgo8bGk+RG93bmxvYWQgYW5kIGV4dHJhY3QgdGhlIGxhdGVzdCBKZWxseWZpbiB2ZXJzaW9uPC9saT4KPGxpPkNvcHkgdGhlIGV4dHJhY3RlZCBmb2xkZXIgaW50byB0aGUgPGNvZGU+amVsbHlmaW48L2NvZGU+IGZvbGRlciBhbmQgcmVuYW1lIGl0IHRvIDxjb2RlPnN5c3RlbTwvY29kZT48L2xpPgo8bGk+UnVuIDxjb2RlPmplbGx5ZmluLmJhdDwvY29kZT4gdG8gc3RhcnQgdGhlIHNlcnZlciBhZ2FpbjwvbGk+Cjwvb2w+CjxwPjxzdHJvbmc+Um9sbGJhY2s8L3N0cm9uZz48L3A+CjxvbD4KPGxpPlN0b3AgSmVsbHlmaW4uPC9saT4KPGxpPkRlbGV0ZSB0aGUgPGNvZGU+c3lzdGVtPC9jb2RlPiBmb2xkZXIuPC9saT4KPGxpPlJlbmFtZSA8Y29kZT5zeXN0ZW0tYmFrPC9jb2RlPiB0byA8Y29kZT5zeXN0ZW08L2NvZGU+LjwvbGk+CjxsaT5SdW4gPGNvZGU+amVsbHlmaW4uYmF0PC9jb2RlPiB0byBzdGFydCB0aGUgc2VydmVyIGFnYWluLjwvbGk+Cjwvb2w+CjxoMiBpZD0ibWFjb3MiPm1hY09TPC9oMj4KPHA+bWFjT1MgQXBwbGljYXRpb24gcGFja2FnZXMgYW5kIGJ1aWxkcyBpbiBUQVIgYXJjaGl2ZSBmb3JtYXQgYXJlIGF2YWlsYWJsZSA8YSBocmVmPSJodHRwczovL2plbGx5ZmluLm9yZy9kb3dubG9hZHMvI21hY29zIj5oZXJlPC9hPi48L3A+CjxwPjxzdHJvbmc+SW5zdGFsbDwvc3Ryb25nPjwvcD4KPG9sPgo8bGk+RG93bmxvYWQgdGhlIGxhdGVzdCB2ZXJzaW9uLjwvbGk+CjxsaT5EcmFnIHRoZSA8Y29kZT4uYXBwPC9jb2RlPiBwYWNrYWdlIGludG8gdGhlIEFwcGxpY2F0aW9ucyBmb2xkZXIuPC9saT4KPGxpPlN0YXJ0IHRoZSBhcHBsaWNhdGlvbi48L2xpPgo8bGk+Q2xpY2sgdGhlIGljb24gaW4gdGhlIG1lbnUgYmFyIGFuZCBzZWxlY3QgJnF1b3Q7TGF1bmNoIFdlYiBVSSZxdW90Oy48L2xpPgo8L29sPgo8cD48c3Ryb25nPlVwZ3JhZGU8L3N0cm9uZz48L3A+CjxvbD4KPGxpPkRvd25sb2FkIHRoZSBsYXRlc3QgdmVyc2lvbi48L2xpPgo8bGk+U3RvcCB0aGUgY3VycmVudGx5IHJ1bm5pbmcgc2VydmVyIGVpdGhlciB2aWEgdGhlIGRhc2hib2FyZCBvciB1c2luZyB0aGUgbWVudSBiYXIgaWNvbi48L2xpPgo8bGk+RHJhZyB0aGUgbmV3IDxjb2RlPi5hcHA8L2NvZGU+IHBhY2thZ2UgaW50byB0aGUgQXBwbGljYXRpb25zIGZvbGRlciBhbmQgY2xpY2sgeWVzIHRvIHJlcGxhY2UgdGhlIGZpbGVzLjwvbGk+CjxsaT5TdGFydCB0aGUgYXBwbGljYXRpb24uPC9saT4KPC9vbD4KPHA+PHN0cm9uZz5Vbmluc3RhbGw8L3N0cm9uZz48L3A+CjxvbD4KPGxpPlN0b3AgdGhlIGN1cnJlbnRseSBydW5uaW5nIHNlcnZlciBlaXRoZXIgdmlhIHRoZSBkYXNoYm9hcmQgb3IgdXNpbmcgdGhlIGFwcGxpY2F0aW9uIGljb24uPC9saT4KPGxpPk1vdmUgdGhlIDxjb2RlPi5hcHA8L2NvZGU+IHBhY2thZ2UgdG8gdGhlIHRyYXNoLjwvbGk+Cjwvb2w+CjxwPjxzdHJvbmc+RGVsZXRpbmcgQ29uZmlndWF0aW9uPC9zdHJvbmc+PC9wPgo8cD5UaGlzIHdpbGwgZGVsZXRlIGFsbCBzZXR0aW5ncyBhbmQgdXNlciBpbmZvcm1hdGlvbi4gVGhpcyBhcHBsaWVzIGZvciB0aGUgLmFwcCBwYWNrYWdlIGFuZCB0aGUgcG9ydGFibGUgdmVyc2lvbi48L3A+CjxvbD4KPGxpPkRlbGV0ZSB0aGUgZm9sZGVyIDxjb2RlPn4vLmNvbmZpZy9qZWxseWZpbi88L2NvZGU+PC9saT4KPGxpPkRlbGV0ZSB0aGUgZm9sZGVyIDxjb2RlPn4vLmxvY2FsL3NoYXJlL2plbGx5ZmluLzwvY29kZT48L2xpPgo8L29sPgo8cD48c3Ryb25nPlBvcnRhYmxlIFZlcnNpb248L3N0cm9uZz48L3A+CjxvbD4KPGxpPkRvd25sb2FkIHRoZSBsYXRlc3QgdmVyc2lvbjwvbGk+CjxsaT5FeHRyYWN0IGl0IGludG8gdGhlIEFwcGxpY2F0aW9ucyBmb2xkZXI8L2xpPgo8bGk+T3BlbiBUZXJtaW5hbCBhbmQgdHlwZSA8Y29kZT5jZDwvY29kZT4gZm9sbG93ZWQgd2l0aCBhIHNwYWNlIHRoZW4gZHJhZyB0aGUgamVsbHlmaW4gZm9sZGVyIGludG8gdGhlIHRlcm1pbmFsLjwvbGk+CjxsaT5UeXBlIDxjb2RlPi4vamVsbHlmaW48L2NvZGU+IHRvIHJ1biBqZWxseWZpbi48L2xpPgo8bGk+T3BlbiB5b3VyIGJyb3dzZXIgYXQgPGEgaHJlZj0iaHR0cDovL2xvY2FsaG9zdDo4MDk2Ij5odHRwOi8vbG9jYWxob3N0OjgwOTY8L2E+PC9saT4KPC9vbD4KPHA+Q2xvc2luZyB0aGUgdGVybWluYWwgd2luZG93IHdpbGwgZW5kIEplbGx5ZmluLiBSdW5uaW5nIEplbGx5ZmluIGluIHNjcmVlbiBvciB0bXV4IGNhbiBwcmV2ZW50IHRoaXMgZnJvbSBoYXBwZW5pbmcuPC9wPgo8cD48c3Ryb25nPlVwZ3JhZGluZyB0aGUgUG9ydGFibGUgVmVyc2lvbjwvc3Ryb25nPjwvcD4KPG9sPgo8bGk+RG93bmxvYWQgdGhlIGxhdGVzdCB2ZXJzaW9uLjwvbGk+CjxsaT5TdG9wIHRoZSBjdXJyZW50bHkgcnVubmluZyBzZXJ2ZXIgZWl0aGVyIHZpYSB0aGUgZGFzaGJvYXJkIG9yIHVzaW5nIDxjb2RlPkNUUkwrQzwvY29kZT4gaW4gdGhlIHRlcm1pbmFsIHdpbmRvdy48L2xpPgo8bGk+RXh0cmFjdCB0aGUgbGF0ZXN0IHZlcnNpb24gaW50byBBcHBsaWNhdGlvbnM8L2xpPgo8bGk+T3BlbiBUZXJtaW5hbCBhbmQgdHlwZSA8Y29kZT5jZDwvY29kZT4gZm9sbG93ZWQgd2l0aCBhIHNwYWNlIHRoZW4gZHJhZyB0aGUgamVsbHlmaW4gZm9sZGVyIGludG8gdGhlIHRlcm1pbmFsLjwvbGk+CjxsaT5UeXBlIDxjb2RlPi4vamVsbHlmaW48L2NvZGU+IHRvIHJ1biBqZWxseWZpbi48L2xpPgo8bGk+T3BlbiB5b3VyIGJyb3dzZXIgYXQgPGEgaHJlZj0iaHR0cDovL2xvY2FsaG9zdDo4MDk2Ij5odHRwOi8vbG9jYWxob3N0OjgwOTY8L2E+PC9saT4KPC9vbD4KPHA+PHN0cm9uZz5Vbmluc3RhbGxpbmcgdGhlIFBvcnRhYmxlIFZlcnNpb248L3N0cm9uZz48L3A+CjxvbD4KPGxpPlN0b3AgdGhlIGN1cnJlbnRseSBydW5uaW5nIHNlcnZlciBlaXRoZXIgdmlhIHRoZSBkYXNoYm9hcmQgb3IgdXNpbmcgPGNvZGU+Q1RSTCtDPC9jb2RlPiBpbiB0aGUgdGVybWluYWwgd2luZG93LjwvbGk+CjxsaT5Nb3ZlIDxjb2RlPi9BcHBsaWNhdGlvbi9qZWxseWZpbi12ZXJzaW9uPC9jb2RlPiBmb2xkZXIgdG8gdGhlIFRyYXNoLiBSZXBsYWNlIHZlcnNpb24gd2l0aCB0aGUgYWN0dWFsIHZlcnNpb24gbnVtYmVyIHlvdSBhcmUgdHJ5aW5nIHRvIGRlbGV0ZS48L2xpPgo8L29sPgo8cD48c3Ryb25nPlVzaW5nIEZGbXBlZyB3aXRoIHRoZSBQb3J0YWJsZSBWZXJzaW9uPC9zdHJvbmc+PC9wPgo8cD5UaGUgcG9ydGFibGUgdmVyc2lvbiBkb2VzbiYjMzk7dCBjb21lIHdpdGggRkZtcGVnIGJ5IGRlZmF1bHQsIHNvIHRvIGluc3RhbGwgRkZtcGVnIHlvdSBoYXZlIHRocmVlIG9wdGlvbnMuPC9wPgo8dWw+CjxsaT51c2UgdGhlIHBhY2thZ2UgbWFuYWdlciBob21lYnJldyBieSB0eXBpbmcgPGNvZGU+YnJldyBpbnN0YWxsIGZmbXBlZzwvY29kZT4gaW50byB5b3VyIFRlcm1pbmFsICg8YSBocmVmPSJodHRwczovL3RyZWVob3VzZS5naXRodWIuaW8vaW5zdGFsbGF0aW9uLWd1aWRlcy9tYWMvaG9tZWJyZXciPmhlcmUmIzM5O3MgaG93IHRvIGluc3RhbGwgaG9tZWJyZXcgaWYgeW91IGRvbiYjMzk7dCBoYXZlIGl0IGFscmVhZHk8L2E+PC9saT4KPGxpPmRvd25sb2FkIHRoZSBtb3N0IHJlY2VudCBzdGF0aWMgYnVpbGQgZnJvbSA8YSBocmVmPSJodHRwczovL2V2ZXJtZWV0LmN4L2ZmbXBlZy9nZXQvemlwIj50aGlzIGxpbms8L2E+IChjb21waWxlZCBieSBhIHRoaXJkIHBhcnR5IHNlZSA8YSBocmVmPSJodHRwczovL2V2ZXJtZWV0LmN4L2ZmbXBlZy8iPnRoaXMgcGFnZTwvYT4gZm9yIG9wdGlvbnMgYW5kIGluZm9ybWF0aW9uKSwgb3I8L2xpPgo8bGk+Y29tcGlsZSBmcm9tIHNvdXJjZSBhdmFpbGFibGUgZnJvbSB0aGUgb2ZmaWNpYWwgPGEgaHJlZj0iaHR0cHM6Ly9mZm1wZWcub3JnL2Rvd25sb2FkLmh0bWwiPndlYnNpdGU8L2E+PC9saT4KPC91bD4KPHA+TW9yZSBkZXRhaWxlZCBkb3dubG9hZCBvcHRpb25zLCBkb2N1bWVudGF0aW9uLCBhbmQgc2lnbmF0dXJlcyBjYW4gYmUgZm91bmQuPC9wPgo8cD5JZiB1c2luZyBzdGF0aWMgYnVpbGQsIGV4dHJhY3QgaXQgdG8gdGhlIDxjb2RlPi9BcHBsaWNhdGlvbnMvPC9jb2RlPiBmb2xkZXIuPC9wPgo8cD5OYXZpZ2F0ZSB0byB0aGUgUGxheWJhY2sgdGFiIGluIHRoZSBEYXNoYm9hcmQgYW5kIHNldCB0aGUgcGF0aCB0byBGRm1wZWcgdW5kZXIgRkZtcGVnIFBhdGguPC9wPgo8aDIgaWQ9ImxpbnV4Ij5MaW51eDwvaDI+CjxoMyBpZD0ibGludXgtZ2VuZXJpYy1hbWQ2NCI+TGludXggKGdlbmVyaWMgYW1kNjQpPC9oMz4KPHA+R2VuZXJpYyBhbWQ2NCwgYXJtNjQsIGFuZCBhcm1oZiBMaW51eCBidWlsZHMgaW4gVEFSIGFyY2hpdmUgZm9ybWF0IGFyZSBhdmFpbGFibGUgPGEgaHJlZj0iaHR0cHM6Ly9qZWxseWZpbi5vcmcvZG93bmxvYWRzLyNsaW51eCI+aGVyZTwvYT4uPC9wPgo8aDQgaWQ9ImJhc2UtaW5zdGFsbGF0aW9uLXByb2Nlc3MiPkJhc2UgSW5zdGFsbGF0aW9uIFByb2Nlc3M8L2g0Pgo8cD5DcmVhdGUgYSBkaXJlY3RvcnkgaW4gPGNvZGU+L29wdDwvY29kZT4gZm9yIGplbGx5ZmluIGFuZCBpdHMgZmlsZXMsIGFuZCBlbnRlciB0aGF0IGRpcmVjdG9yeS48L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmctc2giPnN1ZG8gbWtkaXIgL29wdC9qZWxseWZpbgpjZCAvb3B0L2plbGx5ZmluCjwvY29kZT48L3ByZT48cD5Eb3dubG9hZCB0aGUgbGF0ZXN0IGdlbmVyaWMgTGludXggYnVpbGQgZm9yIHlvdXIgYXJjaGl0ZWN0dXJlLgpUaGUgcmVzdCBvZiB0aGVzZSBpbnN0cnVjdGlvbnMgYXNzdW1lIHZlcnNpb24gMTAuNy43IGlzIGJlaW5nIGluc3RhbGxlZCAoaS5lLiA8Y29kZT5qZWxseWZpbl8xMC43LjdfYW1kNjQudGFyLmd6PC9jb2RlPikuCkRvd25sb2FkIHRoZSBnZW5lcmljIGJ1aWxkLCB0aGVuIGV4dHJhY3QgdGhlIGFyY2hpdmU6PC9wPgo8cHJlPjxjb2RlIGNsYXNzPSJsYW5nLXNoIj5zdWRvIHdnZXQgaHR0cHM6Ly9yZXBvLmplbGx5ZmluLm9yZy9yZWxlYXNlcy9zZXJ2ZXIvbGludXgvc3RhYmxlL2NvbWJpbmVkL2plbGx5ZmluXzEwLjcuN19hbWQ2NC50YXIuZ3oKc3VkbyB0YXIgeHZ6ZiBqZWxseWZpbl8xMC43LjdfYW1kNjQudGFyLmd6CjwvY29kZT48L3ByZT48cD5DcmVhdGUgYSBzeW1ib2xpYyBsaW5rIHRvIHRoZSBKZWxseWZpbiAxMC43LjcgZGlyZWN0b3J5LgpUaGlzIGFsbG93cyBhbiB1cGdyYWRlIGJ5IHJlcGVhdGluZyB0aGUgYWJvdmUgc3RlcHMgYW5kIGVuYWJsaW5nIGl0IGJ5IHNpbXBseSByZS1jcmVhdGluZyB0aGUgc3ltYm9saWMgbGluayB0byB0aGUgbmV3IHZlcnNpb24uPC9wPgo8cHJlPjxjb2RlIGNsYXNzPSJsYW5nLXNoIj5zdWRvIGxuIC1zIGplbGx5ZmluXzEwLjcuNyBqZWxseWZpbgo8L2NvZGU+PC9wcmU+PHA+Q3JlYXRlIGZvdXIgc3ViLWRpcmVjdG9yaWVzIGZvciBKZWxseWZpbiBkYXRhLjwvcD4KPHByZT48Y29kZSBjbGFzcz0ibGFuZy1zaCI+c3VkbyBta2RpciBkYXRhIGNhY2hlIGNvbmZpZyBsb2cKPC9jb2RlPjwvcHJlPjxoNCBpZD0iZmZtcGVnLWluc3RhbGxhdGlvbiI+PGNvZGU+ZmZtcGVnPC9jb2RlPiBJbnN0YWxsYXRpb248L2g0Pgo8cD5JZiB5b3UgYXJlIG5vdCBydW5uaW5nIGEgRGViaWFuIGRlcml2YXRpdmUsIGluc3RhbGwgPGNvZGU+ZmZtcGVnPC9jb2RlPiB0aHJvdWdoIHlvdXIgT1MmIzM5O3MgcGFja2FnZSBtYW5hZ2VyLCBhbmQgc2tpcCB0aGlzIHNlY3Rpb24uPC9wPgo8ZGl2IGNsYXNzPSJXQVJOSU5HIj48aDU+V2FybmluZzwvaDU+PHA+Tm90IGJlaW5nIGFibGUgdG8gdXNlIDxjb2RlPmplbGx5ZmluLWZmbXBlZzwvY29kZT4gd2lsbCBtb3N0IGxpa2VseSBicmVhayBoYXJkd2FyZSBhY2NlbGVyYXRpb24gYW5kIHRvbmVtYXBwaW5nLjwvcD4KPC9kaXY+CjxwPklmIHlvdSBhcmUgcnVubmluZyBEZWJpYW4gb3IgYSBkZXJpdmF0aXZlLCB5b3Ugc2hvdWxkIDxhIGhyZWY9Imh0dHBzOi8vcmVwby5qZWxseWZpbi5vcmcvcmVsZWFzZXMvc2VydmVyL2RlYmlhbi92ZXJzaW9ucy9qZWxseWZpbi1mZm1wZWcvIj5kb3dubG9hZDwvYT4gYW5kIGluc3RhbGwgYW4gPGNvZGU+ZmZtcGVnPC9jb2RlPiByZWxlYXNlIGJ1aWx0IHNwZWNpZmljYWxseSBmb3IgSmVsbHlmaW4uCkJlIHN1cmUgdG8gZG93bmxvYWQgdGhlIGxhdGVzdCByZWxlYXNlIHRoYXQgbWF0Y2hlcyB5b3VyIE9TICg0LjQuMS0xIGZvciBEZWJpYW4gQnVsbHNleWUgYXNzdW1lZCBiZWxvdykuPC9wPgo8cHJlPjxjb2RlIGNsYXNzPSJsYW5nLXNoIj5zdWRvIHdnZXQgaHR0cHM6Ly9yZXBvLmplbGx5ZmluLm9yZy9yZWxlYXNlcy9zZXJ2ZXIvZGViaWFuL3ZlcnNpb25zL2plbGx5ZmluLWZmbXBlZy80LjQuMS0xL2plbGx5ZmluLWZmbXBlZ180LjQuMS0xLWJ1bGxzZXllX2FtZDY0LmRlYgpzdWRvIGRwa2cgLS1pbnN0YWxsIGplbGx5ZmluLWZmbXBlZ180LjQuMS0xLWJ1bGxzZXllX2FtZDY0LmRlYgo8L2NvZGU+PC9wcmU+PHA+SWYgeW91IHJ1biBpbnRvIGFueSBkZXBlbmRlbmN5IGVycm9ycywgcnVuIHRoaXMgYW5kIGl0IHdpbGwgaW5zdGFsbCB0aGVtIGFuZCA8Y29kZT5qZWxseWZpbi1mZm1wZWc8L2NvZGU+LjwvcD4KPHByZT48Y29kZSBjbGFzcz0ibGFuZy1zaCI+c3VkbyBhcHQgaW5zdGFsbCAtZgo8L2NvZGU+PC9wcmU+PGg0IGlkPSJydW5uaW5nLWplbGx5ZmluIj5SdW5uaW5nIEplbGx5ZmluPC9oND4KPHA+RHVlIHRvIHRoZSBudW1iZXIgb2YgY29tbWFuZCBsaW5lIG9wdGlvbnMgdGhhdCBtdXN0IGJlIHBhc3NlZCwgaXQgaXMgZWFzaWVzdCB0byBjcmVhdGUgYSBzbWFsbCBzY3JpcHQgdG8gcnVuIEplbGx5ZmluLjwvcD4KPHByZT48Y29kZSBjbGFzcz0ibGFuZy1zaCI+c3VkbyBuYW5vIGplbGx5ZmluLnNoCjwvY29kZT48L3ByZT48cD5UaGVuIHBhc3RlIHRoZSBmb2xsb3dpbmcgY29tbWFuZHMgYW5kIG1vZGlmeSBhcyBuZWVkZWQuPC9wPgo8cHJlPjxjb2RlIGNsYXNzPSJsYW5nLXNoIj4jIS9iaW4vYmFzaApKRUxMWUZJTkRJUj0mcXVvdDsvb3B0L2plbGx5ZmluJnF1b3Q7CkZGTVBFR0RJUj0mcXVvdDsvdXNyL3NoYXJlL2plbGx5ZmluLWZmbXBlZyZxdW90OwoKJEpFTExZRklORElSL2plbGx5ZmluL2plbGx5ZmluIFwKIC1kICRKRUxMWUZJTkRJUi9kYXRhIFwKIC1DICRKRUxMWUZJTkRJUi9jYWNoZSBcCiAtYyAkSkVMTFlGSU5ESVIvY29uZmlnIFwKIC1sICRKRUxMWUZJTkRJUi9sb2cgXAogLS1mZm1wZWcgJEZGTVBFR0RJUi9mZm1wZWcKPC9jb2RlPjwvcHJlPjxwPkFzc3VtaW5nIHlvdSBkZXNpcmUgSmVsbHlmaW4gdG8gcnVuIGFzIGEgbm9uLXJvb3QgdXNlciwgPGNvZGU+Y2htb2Q8L2NvZGU+IGFsbCBmaWxlcyBhbmQgZGlyZWN0b3JpZXMgdG8geW91ciBub3JtYWwgbG9naW4gdXNlciBhbmQgZ3JvdXAuCkFsc28gbWFrZSB0aGUgc3RhcnR1cCBzY3JpcHQgYWJvdmUgZXhlY3V0YWJsZS48L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmctc2giPnN1ZG8gY2hvd24gLVIgdXNlcjpncm91cCAqCnN1ZG8gY2htb2QgdSt4IGplbGx5ZmluLnNoCjwvY29kZT48L3ByZT48cD5GaW5hbGx5IHlvdSBjYW4gcnVuIGl0LgpZb3Ugd2lsbCBzZWUgbG90cyBvZiBsb2cgaW5mb3JtYXRpb24gd2hlbiBydW4sIHRoaXMgaXMgbm9ybWFsLgpTZXR1cCBpcyBhcyB1c3VhbCBpbiB0aGUgd2ViIGJyb3dzZXIuPC9wPgo8cHJlPjxjb2RlIGNsYXNzPSJsYW5nLXNoIj4uL2plbGx5ZmluLnNoCjwvY29kZT48L3ByZT48aDUgaWQ9InN0YXJ0aW5nLWplbGx5ZmluLW9uLWJvb3Qtb3B0aW9uYWwiPlN0YXJ0aW5nIEplbGx5ZmluIG9uIGJvb3QgKG9wdGlvbmFsKTwvaDU+CjxwPkNyZWF0ZSBhIDxjb2RlPnN5c3RlbWQ8L2NvZGU+IHVuaXQgZmlsZS48L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmctc2giPmNkIC9ldGMvc3lzdGVtZC9zeXN0ZW0Kc3VkbyBuYW5vIGplbGx5ZmluLnNlcnZpY2UKPC9jb2RlPjwvcHJlPjxwPlRoZW4gcGFzdGUgdGhlIGZvbGxvd2luZyBjb250ZW50cywgcmVwbGFjaW5nIDxjb2RlPnlvdXJ1c2VyPC9jb2RlPiB3aXRoIHlvdXIgdXNlcm5hbWUuPC9wPgo8cHJlPjxjb2RlIGNsYXNzPSJsYW5nLWluaSI+W1VuaXRdCkRlc2NyaXB0aW9uPUplbGx5ZmluCkFmdGVyPW5ldHdvcmsudGFyZ2V0CgpbU2VydmljZV0KVHlwZT1zaW1wbGUKVXNlcj15b3VydXNlcgpSZXN0YXJ0PWFsd2F5cwpFeGVjU3RhcnQ9L29wdC9qZWxseWZpbi9qZWxseWZpbi5zaAoKW0luc3RhbGxdCldhbnRlZEJ5PW11bHRpLXVzZXIudGFyZ2V0CjwvY29kZT48L3ByZT48cD5BcHBseSB0aGUgY29ycmVjdCBwZXJtaXNzaW9ucyB0byB0aGUgZmlsZSwgZW5hYmxlIHRoZSBzZXJ2aWNlIHRvIHN0YXJ0IG9uIGJvb3QsIHRoZW4gc3RhcnQgaXQuPC9wPgo8cHJlPjxjb2RlIGNsYXNzPSJsYW5nLXNoIj5zdWRvIGNobW9kIDY0NCBqZWxseWZpbi5zZXJ2aWNlCnN1ZG8gc3lzdGVtY3RsIGRhZW1vbi1yZWxvYWQKc3VkbyBzeXN0ZW1jdGwgZW5hYmxlIGplbGx5ZmluLnNlcnZpY2UKc3VkbyBzeXN0ZW1jdGwgc3RhcnQgamVsbHlmaW4uc2VydmljZQo8L2NvZGU+PC9wcmU+PGgzIGlkPSJwb3J0YWJsZS1kbGwiPlBvcnRhYmxlIERMTDwvaDM+CjxwPlBsYXRmb3JtLWFnbm9zdGljIC5ORVQgQ29yZSBETEwgYnVpbGRzIGluIFRBUiBhcmNoaXZlIGZvcm1hdCBhcmUgYXZhaWxhYmxlIDxhIGhyZWY9Imh0dHBzOi8vamVsbHlmaW4ub3JnL2Rvd25sb2Fkcy8jcG9ydGFibGUiPmhlcmU8L2E+LgpUaGVzZSBidWlsZHMgdXNlIHRoZSBiaW5hcnkgPGNvZGU+amVsbHlmaW4uZGxsPC9jb2RlPiBhbmQgbXVzdCBiZSBsb2FkZWQgd2l0aCA8Y29kZT5kb3RuZXQ8L2NvZGU+LjwvcD4KPGgzIGlkPSJhcmNoLWxpbnV4Ij5BcmNoIExpbnV4PC9oMz4KPHA+SmVsbHlmaW4gY2FuIGJlIGZvdW5kIGluIHRoZSBBVVIgYXMgPGEgaHJlZj0iaHR0cHM6Ly9hdXIuYXJjaGxpbnV4Lm9yZy9wYWNrYWdlcy9qZWxseWZpbi8iPjxjb2RlPmplbGx5ZmluPC9jb2RlPjwvYT4sIDxhIGhyZWY9Imh0dHBzOi8vYXVyLmFyY2hsaW51eC5vcmcvcGFja2FnZXMvamVsbHlmaW4tYmluLyI+PGNvZGU+amVsbHlmaW4tYmluPC9jb2RlPjwvYT4gYW5kIDxhIGhyZWY9Imh0dHBzOi8vYXVyLmFyY2hsaW51eC5vcmcvcGFja2FnZXMvamVsbHlmaW4tZ2l0LyI+PGNvZGU+amVsbHlmaW4tZ2l0PC9jb2RlPjwvYT4uPC9wPgo8aDMgaWQ9ImZlZG9yYSI+RmVkb3JhPC9oMz4KPHA+RmVkb3JhIGJ1aWxkcyBpbiBSUE0gcGFja2FnZSBmb3JtYXQgYXJlIGF2YWlsYWJsZSA8YSBocmVmPSJodHRwczovL2plbGx5ZmluLm9yZy9kb3dubG9hZHMvI2ZlZG9yYSI+aGVyZTwvYT4gZm9yIG5vdyBidXQgYW4gb2ZmaWNpYWwgRmVkb3JhIHJlcG9zaXRvcnkgaXMgY29taW5nIHNvb24uPC9wPgo8b2w+CjxsaT48cD5Zb3Ugd2lsbCBuZWVkIHRvIGVuYWJsZSBycG1mdXNpb24gYXMgZmZtcGVnIGlzIGEgZGVwZW5kZW5jeSBvZiB0aGUgamVsbHlmaW4gc2VydmVyIHBhY2thZ2U8L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmctc2giPnN1ZG8gZG5mIGluc3RhbGwgaHR0cHM6Ly9taXJyb3JzLnJwbWZ1c2lvbi5vcmcvZnJlZS9mZWRvcmEvcnBtZnVzaW9uLWZyZWUtcmVsZWFzZS0kKHJwbSAtRSAlZmVkb3JhKS5ub2FyY2gucnBtIGh0dHBzOi8vbWlycm9ycy5ycG1mdXNpb24ub3JnL25vbmZyZWUvZmVkb3JhL3JwbWZ1c2lvbi1ub25mcmVlLXJlbGVhc2UtJChycG0gLUUgJWZlZG9yYSkubm9hcmNoLnJwbQo8L2NvZGU+PC9wcmU+PGRpdiBjbGFzcz0iTk9URSI+PGg1Pk5vdGU8L2g1PjxwPllvdSBkbyBub3QgbmVlZCB0byBtYW51YWxseSBpbnN0YWxsIGZmbXBlZywgaXQgd2lsbCBiZSBpbnN0YWxsZWQgYnkgdGhlIGplbGx5ZmluIHNlcnZlciBwYWNrYWdlIGFzIGEgZGVwZW5kZW5jeTwvcD4KPC9kaXY+CjwvbGk+CjxsaT48cD5JbnN0YWxsIHRoZSBqZWxseWZpbiBzZXJ2ZXI8L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmctc2giPnN1ZG8gZG5mIGluc3RhbGwgKGxpbmsgdG8gdmVyc2lvbiBqZWxseWZpbiBzZXJ2ZXIgeW91IHdhbnQgdG8gaW5zdGFsbCkKPC9jb2RlPjwvcHJlPjwvbGk+CjxsaT48cD5JbnN0YWxsIHRoZSBqZWxseWZpbiB3ZWIgaW50ZXJmYWNlPC9wPgo8cHJlPjxjb2RlIGNsYXNzPSJsYW5nLXNoIj5zdWRvIGRuZiBpbnN0YWxsIChsaW5rIHRvIHdlYiBSUE0geW91IHdhbnQgdG8gaW5zdGFsbCkKPC9jb2RlPjwvcHJlPjwvbGk+CjxsaT48cD5FbmFibGUgamVsbHlmaW4gc2VydmljZSB3aXRoIHN5c3RlbWQ8L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmctc2giPnN1ZG8gc3lzdGVtY3RsIHN0YXJ0IGplbGx5ZmluCjwvY29kZT48L3ByZT48cHJlPjxjb2RlIGNsYXNzPSJsYW5nLXNoIj5zdWRvIHN5c3RlbWN0bCBlbmFibGUgamVsbHlmaW4KPC9jb2RlPjwvcHJlPjwvbGk+CjxsaT48cD5PcGVuIGplbGx5ZmluIHNlcnZpY2Ugd2l0aCBmaXJld2FsbGQ8L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmctc2giPnN1ZG8gZmlyZXdhbGwtY21kIC0tcGVybWFuZW50IC0tYWRkLXNlcnZpY2U9amVsbHlmaW4KPC9jb2RlPjwvcHJlPjxkaXYgY2xhc3M9Ik5PVEUiPjxoNT5Ob3RlPC9oNT48cD5UaGlzIHdpbGwgb3BlbiB0aGUgZm9sbG93aW5nIHBvcnRzCjgwOTYgVENQIHVzZWQgYnkgZGVmYXVsdCBmb3IgSFRUUCB0cmFmZmljLCB5b3UgY2FuIGNoYW5nZSB0aGlzIGluIHRoZSBkYXNoYm9hcmQKODkyMCBUQ1AgdXNlZCBieSBkZWZhdWx0IGZvciBIVFRQUyB0cmFmZmljLCB5b3UgY2FuIGNoYW5nZSB0aGlzIGluIHRoZSBkYXNoYm9hcmQKMTkwMCBVRFAgdXNlZCBmb3Igc2VydmljZSBhdXRvLWRpc2NvdmVyeSwgdGhpcyBpcyBub3QgY29uZmlndXJhYmxlCjczNTkgVURQIHVzZWQgZm9yIGF1dG8tZGlzY292ZXJ5LCB0aGlzIGlzIG5vdCBjb25maWd1cmFibGU8L3A+CjwvZGl2Pgo8L2xpPgo8bGk+PHA+UmVib290IHlvdXIgbWFjaGluZTwvcD4KPHByZT48Y29kZSBjbGFzcz0ibGFuZy1zaCI+c3VkbyBzeXN0ZW1jdGwgcmVib290CjwvY29kZT48L3ByZT48L2xpPgo8bGk+PHA+R28gdG8gPGNvZGU+bG9jYWxob3N0OjgwOTY8L2NvZGU+IG9yIDxjb2RlPmlwLWFkZHJlc3Mtb2YtamVsbHlmaW4tc2VydmVyOjgwOTY8L2NvZGU+IHRvIGZpbmlzaCBzZXR1cCBpbiB0aGUgd2ViIFVJPC9wPgo8L2xpPgo8L29sPgo8aDMgaWQ9ImNlbnRvcyI+Q2VudE9TPC9oMz4KPHA+Q2VudE9TL1JIRUwgNyBidWlsZHMgaW4gUlBNIHBhY2thZ2UgZm9ybWF0IGFyZSBhdmFpbGFibGUgPGEgaHJlZj0iaHR0cHM6Ly9qZWxseWZpbi5vcmcvZG93bmxvYWRzLyNjZW50b3MiPmhlcmU8L2E+IGFuZCBhbiBvZmZpY2lhbCBDZW50T1MvUkhFTCByZXBvc2l0b3J5IGlzIHBsYW5uZWQgZm9yIHRoZSBmdXR1cmUuPC9wPgo8cD5UaGUgZGVmYXVsdCBDZW50T1MvUkhFTCByZXBvc2l0b3JpZXMgZG9uJiMzOTt0IHByb3ZpZGUgRkZtcGVnLCB3aGljaCB0aGUgUlBNIHJlcXVpcmVzLiBZb3Ugd2lsbCBuZWVkIHRvIGFkZCBhIHRoaXJkLXBhcnR5IHJlcG9zaXRvcnkgd2hpY2ggcHJvdmlkZSBGRm1wZWcsIHN1Y2ggYXMgPGEgaHJlZj0iaHR0cHM6Ly9ycG1mdXNpb24ub3JnL0NvbmZpZ3VyYXRpb24iPlJQTSBGdXNpb24mIzM5O3MgRnJlZSByZXBvc2l0b3J5PC9hPi48L3A+CjxwPllvdSBjYW4gYWxzbyBidWlsZCA8YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20vamVsbHlmaW4vamVsbHlmaW4tZmZtcGVnIj5KZWxseWZpbiYjMzk7cyB2ZXJzaW9uPC9hPiBvbiB5b3VyIG93bi4gVGhpcyBpbmNsdWRlcyBnYXRoZXJpbmcgdGhlIGRlcGVuZGVuY2llcyBhbmQgY29tcGlsaW5nIGFuZCBpbnN0YWxsaW5nIHRoZW0uIEluc3RydWN0aW9ucyBjYW4gYmUgZm91bmQgYXQgPGEgaHJlZj0iaHR0cHM6Ly90cmFjLmZmbXBlZy5vcmcvd2lraS9Db21waWxhdGlvbkd1aWRlL0NlbnRvcyI+dGhlIEZGbXBlZyB3aWtpPC9hPi48L3A+CjxoMyBpZD0iZGViaWFuIj5EZWJpYW48L2gzPgo8aDQgaWQ9InJlcG9zaXRvcnkiPlJlcG9zaXRvcnk8L2g0Pgo8cD5UaGUgSmVsbHlmaW4gdGVhbSBwcm92aWRlcyBhIERlYmlhbiByZXBvc2l0b3J5IGZvciBpbnN0YWxsYXRpb24gb24gRGViaWFuIEJ1c3Rlci9CdWxsc2V5ZS4KU3VwcG9ydGVkIGFyY2hpdGVjdHVyZXMgYXJlIDxjb2RlPmFtZDY0PC9jb2RlPiwgPGNvZGU+YXJtNjQ8L2NvZGU+LCBhbmQgPGNvZGU+YXJtaGY8L2NvZGU+LjwvcD4KPGRpdiBjbGFzcz0iTk9URSI+PGg1Pk5vdGU8L2g1PjxwPk1pY3Jvc29mdCBkb2VzIG5vdCBwcm92aWRlIGEgLk5FVCBmb3IgMzItYml0IHg4NiBMaW51eCBzeXN0ZW1zLCBhbmQgaGVuY2UgSmVsbHlmaW4gaXMgPHN0cm9uZz5ub3Q8L3N0cm9uZz4gc3VwcG9ydGVkIG9uIHRoZSA8Y29kZT5pMzg2PC9jb2RlPiBhcmNoaXRlY3R1cmUuPC9wPgo8L2Rpdj4KPHA+U3RlcHMgMSB0byAzIGNhbiBhbHNvIGJlIHJlcGxhY2VkIGJ5OjwvcD4KPHByZT48Y29kZSBjbGFzcz0ibGFuZy1zaCI+c3VkbyBhcHQgaW5zdGFsbCBleHRyZXBvCnN1ZG8gZXh0cmVwbyBlbmFibGUgamVsbHlmaW4KPC9jb2RlPjwvcHJlPjxvbD4KPGxpPjxwPkluc3RhbGwgSFRUUFMgdHJhbnNwb3J0IGZvciBBUFQgYXMgd2VsbCBhcyA8Y29kZT5nbnVwZzwvY29kZT4gYW5kIDxjb2RlPmxzYi1yZWxlYXNlPC9jb2RlPiBpZiB5b3UgaGF2ZW4mIzM5O3QgYWxyZWFkeS48L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmctc2giPnN1ZG8gYXB0IGluc3RhbGwgYXB0LXRyYW5zcG9ydC1odHRwcyBnbnVwZyBsc2ItcmVsZWFzZQo8L2NvZGU+PC9wcmU+PC9saT4KPGxpPjxwPkltcG9ydCB0aGUgR1BHIHNpZ25pbmcga2V5IChzaWduZWQgYnkgdGhlIEplbGx5ZmluIFRlYW0pOjwvcD4KPHByZT48Y29kZSBjbGFzcz0ibGFuZy1zaCI+Y3VybCAtZnNTTCBodHRwczovL3JlcG8uamVsbHlmaW4ub3JnL2RlYmlhbi9qZWxseWZpbl90ZWFtLmdwZy5rZXkgfCBncGcgLS1kZWFybW9yIC1vIC9ldGMvYXB0L3RydXN0ZWQuZ3BnLmQvZGViaWFuLWplbGx5ZmluLmdwZwo8L2NvZGU+PC9wcmU+PC9saT4KPGxpPjxwPkFkZCBhIHJlcG9zaXRvcnkgY29uZmlndXJhdGlvbiBhdCA8Y29kZT4vZXRjL2FwdC9zb3VyY2VzLmxpc3QuZC9qZWxseWZpbi5saXN0PC9jb2RlPjo8L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmctc2giPmVjaG8gJnF1b3Q7ZGViIFthcmNoPSQoIGRwa2cgLS1wcmludC1hcmNoaXRlY3R1cmUgKV0gaHR0cHM6Ly9yZXBvLmplbGx5ZmluLm9yZy9kZWJpYW4gJCggbHNiX3JlbGVhc2UgLWMgLXMgKSBtYWluJnF1b3Q7IHwgc3VkbyB0ZWUgL2V0Yy9hcHQvc291cmNlcy5saXN0LmQvamVsbHlmaW4ubGlzdAo8L2NvZGU+PC9wcmU+PGRpdiBjbGFzcz0iTk9URSI+PGg1Pk5vdGU8L2g1PjxwPlN1cHBvcnRlZCByZWxlYXNlcyBhcmUgPGNvZGU+YnVzdGVyPC9jb2RlPiBhbmQgPGNvZGU+YnVsbHNleWU8L2NvZGU+LjwvcD4KPC9kaXY+CjwvbGk+CjxsaT48cD5VcGRhdGUgQVBUIHJlcG9zaXRvcmllczo8L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmctc2giPnN1ZG8gYXB0IHVwZGF0ZQo8L2NvZGU+PC9wcmU+PC9saT4KPGxpPjxwPkluc3RhbGwgSmVsbHlmaW46PC9wPgo8cHJlPjxjb2RlIGNsYXNzPSJsYW5nLXNoIj5zdWRvIGFwdCBpbnN0YWxsIGplbGx5ZmluCjwvY29kZT48L3ByZT48L2xpPgo8bGk+PHA+TWFuYWdlIHRoZSBKZWxseWZpbiBzeXN0ZW0gc2VydmljZSB3aXRoIHlvdXIgdG9vbCBvZiBjaG9pY2U6PC9wPgo8cHJlPjxjb2RlIGNsYXNzPSJsYW5nLXNoIj5zdWRvIHNlcnZpY2UgamVsbHlmaW4gc3RhdHVzCnN1ZG8gc3lzdGVtY3RsIHJlc3RhcnQgamVsbHlmaW4Kc3VkbyAvZXRjL2luaXQuZC9qZWxseWZpbiBzdG9wCjwvY29kZT48L3ByZT48L2xpPgo8L29sPgo8aDQgaWQ9InBhY2thZ2VzIj5QYWNrYWdlczwvaDQ+CjxwPlJhdyBEZWJpYW4gcGFja2FnZXMsIGluY2x1ZGluZyBvbGQgdmVyc2lvbnMsIGFyZSBhdmFpbGFibGUgPGEgaHJlZj0iaHR0cHM6Ly9qZWxseWZpbi5vcmcvZG93bmxvYWRzLyNkZWJpYW4iPmhlcmU8L2E+LjwvcD4KPGRpdiBjbGFzcz0iTk9URSI+PGg1Pk5vdGU8L2g1PjxwPlRoZSByZXBvc2l0b3J5IGlzIHRoZSBwcmVmZXJyZWQgd2F5IHRvIG9idGFpbiBKZWxseWZpbiBvbiBEZWJpYW4sIGFzIGl0IGNvbnRhaW5zIHNldmVyYWwgZGVwZW5kZW5jaWVzIGFzIHdlbGwuPC9wPgo8L2Rpdj4KPG9sPgo8bGk+PHA+RG93bmxvYWQgdGhlIGRlc2lyZWQgPGNvZGU+amVsbHlmaW48L2NvZGU+IGFuZCA8Y29kZT5qZWxseWZpbi1mZm1wZWc8L2NvZGU+IDxjb2RlPi5kZWI8L2NvZGU+IHBhY2thZ2VzIGZyb20gdGhlIHJlcG9zaXRvcnkuPC9wPgo8L2xpPgo8bGk+PHA+SW5zdGFsbCB0aGUgZG93bmxvYWRlZCA8Y29kZT4uZGViPC9jb2RlPiBwYWNrYWdlczo8L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmctc2giPnN1ZG8gZHBrZyAtaSBqZWxseWZpbl8qLmRlYiBqZWxseWZpbi1mZm1wZWdfKi5kZWIKPC9jb2RlPjwvcHJlPjwvbGk+CjxsaT48cD5Vc2UgPGNvZGU+YXB0PC9jb2RlPiB0byBpbnN0YWxsIGFueSBtaXNzaW5nIGRlcGVuZGVuY2llczo8L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmctc2giPnN1ZG8gYXB0IC1mIGluc3RhbGwKPC9jb2RlPjwvcHJlPjwvbGk+CjxsaT48cD5NYW5hZ2UgdGhlIEplbGx5ZmluIHN5c3RlbSBzZXJ2aWNlIHdpdGggeW91ciB0b29sIG9mIGNob2ljZTo8L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmctc2giPnN1ZG8gc2VydmljZSBqZWxseWZpbiBzdGF0dXMKc3VkbyBzeXN0ZW1jdGwgcmVzdGFydCBqZWxseWZpbgpzdWRvIC9ldGMvaW5pdC5kL2plbGx5ZmluIHN0b3AKPC9jb2RlPjwvcHJlPjwvbGk+Cjwvb2w+CjxoMyBpZD0idWJ1bnR1Ij5VYnVudHU8L2gzPgo8aDQgaWQ9Im1pZ3JhdGluZy10by10aGUtbmV3LXJlcG9zaXRvcnkiPk1pZ3JhdGluZyB0byB0aGUgbmV3IHJlcG9zaXRvcnk8L2g0Pgo8cD5QcmV2aW91cyB2ZXJzaW9ucyBvZiBKZWxseWZpbiBpbmNsdWRlZCBVYnVudHUgdW5kZXIgdGhlIERlYmlhbiByZXBvc2l0b3J5LgpUaGlzIGhhcyBub3cgYmVlbiBzcGxpdCBvdXQgaW50byBpdHMgb3duIHJlcG9zaXRvcnkgdG8gYmV0dGVyIGhhbmRsZSB0aGUgc2VwYXJhdGUgYmluYXJ5IHBhY2thZ2VzLgpJZiB5b3UgZW5jb3VudGVyIGVycm9ycyBhYm91dCB0aGUgPGNvZGU+dWJ1bnR1PC9jb2RlPiByZWxlYXNlIG5vdCBiZWluZyBmb3VuZCBhbmQgeW91IHByZXZpb3VzbHkgY29uZmlndXJlZCBhbiA8Y29kZT51YnVudHU8L2NvZGU+IDxjb2RlPmplbGx5ZmluLmxpc3Q8L2NvZGU+IGZpbGUsIHBsZWFzZSBmb2xsb3cgdGhlc2Ugc3RlcHMuPC9wPgo8b2w+CjxsaT48cD5SZW1vdmUgdGhlIG9sZCA8Y29kZT4vZXRjL2FwdC9zb3VyY2VzLmxpc3QuZC9qZWxseWZpbi5saXN0PC9jb2RlPiBmaWxlOjwvcD4KPHByZT48Y29kZSBjbGFzcz0ibGFuZy1zaCI+c3VkbyBybSAvZXRjL2FwdC9zb3VyY2VzLmxpc3QuZC9qZWxseWZpbi5saXN0CjwvY29kZT48L3ByZT48L2xpPgo8bGk+PHA+UHJvY2VlZCB3aXRoIHRoZSBmb2xsb3dpbmcgc2VjdGlvbiBhcyB3cml0dGVuLjwvcD4KPC9saT4KPC9vbD4KPGg0IGlkPSJ1YnVudHUtcmVwb3NpdG9yeSI+VWJ1bnR1IFJlcG9zaXRvcnk8L2g0Pgo8cD5UaGUgSmVsbHlmaW4gdGVhbSBwcm92aWRlcyBhbiBVYnVudHUgcmVwb3NpdG9yeSBmb3IgaW5zdGFsbGF0aW9uIG9uIFVidW50dSBYZW5pYWwsIEJpb25pYywgQ29zbWljLCBEaXNjbywgRW9hbiwgYW5kIEZvY2FsLiBTdXBwb3J0ZWQgYXJjaGl0ZWN0dXJlcyBhcmUgPGNvZGU+YW1kNjQ8L2NvZGU+LCA8Y29kZT5hcm02NDwvY29kZT4sIGFuZCA8Y29kZT5hcm1oZjwvY29kZT4uCk9ubHkgPGNvZGU+YW1kNjQ8L2NvZGU+IGlzIHN1cHBvcnRlZCBvbiBVYnVudHUgWGVuaWFsLjwvcD4KPGRpdiBjbGFzcz0iTk9URSI+PGg1Pk5vdGU8L2g1PjxwPk1pY3Jvc29mdCBkb2VzIG5vdCBwcm92aWRlIGEgLk5FVCBmb3IgMzItYml0IHg4NiBMaW51eCBzeXN0ZW1zLCBhbmQgaGVuY2UgSmVsbHlmaW4gaXMgPHN0cm9uZz5ub3Q8L3N0cm9uZz4gc3VwcG9ydGVkIG9uIHRoZSA8Y29kZT5pMzg2PC9jb2RlPiBhcmNoaXRlY3R1cmUuPC9wPgo8L2Rpdj4KPG9sPgo8bGk+PHA+SW5zdGFsbCBIVFRQUyB0cmFuc3BvcnQgZm9yIEFQVCBpZiB5b3UgaGF2ZW4mIzM5O3QgYWxyZWFkeTo8L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmctc2giPnN1ZG8gYXB0IGluc3RhbGwgYXB0LXRyYW5zcG9ydC1odHRwcwo8L2NvZGU+PC9wcmU+PC9saT4KPGxpPjxwPkVuYWJsZSB0aGUgVW5pdmVyc2UgcmVwb3NpdG9yeSB0byBvYnRhaW4gYWxsIHRoZSBGRk1wZWcgZGVwZW5kZW5jaWVzOjwvcD4KPHByZT48Y29kZSBjbGFzcz0ibGFuZy1zaCI+c3VkbyBhZGQtYXB0LXJlcG9zaXRvcnkgdW5pdmVyc2UKPC9jb2RlPjwvcHJlPjxkaXYgY2xhc3M9Ik5PVEUiPjxoNT5Ob3RlPC9oNT48cD5JZiB0aGUgYWJvdmUgY29tbWFuZCBmYWlscyB5b3Ugd2lsbCBuZWVkIHRvIGluc3RhbGwgdGhlIGZvbGxvd2luZyBwYWNrYWdlIDxjb2RlPnNvZnR3YXJlLXByb3BlcnRpZXMtY29tbW9uPC9jb2RlPi4KVGhpcyBjYW4gYmUgYWNoaWV2ZWQgd2l0aCB0aGUgZm9sbG93aW5nIGNvbW1hbmQgPGNvZGU+c3VkbyBhcHQtZ2V0IGluc3RhbGwgc29mdHdhcmUtcHJvcGVydGllcy1jb21tb248L2NvZGU+PC9wPgo8L2Rpdj4KPC9saT4KPGxpPjxwPkltcG9ydCB0aGUgR1BHIHNpZ25pbmcga2V5IChzaWduZWQgYnkgdGhlIEplbGx5ZmluIFRlYW0pOjwvcD4KPHByZT48Y29kZSBjbGFzcz0ibGFuZy1zaCI+Y3VybCAtZnNTTCBodHRwczovL3JlcG8uamVsbHlmaW4ub3JnL3VidW50dS9qZWxseWZpbl90ZWFtLmdwZy5rZXkgfCBzdWRvIGdwZyAtLWRlYXJtb3IgLW8gL2V0Yy9hcHQvdHJ1c3RlZC5ncGcuZC9kZWJpYW4tamVsbHlmaW4uZ3BnCjwvY29kZT48L3ByZT48L2xpPgo8bGk+PHA+QWRkIGEgcmVwb3NpdG9yeSBjb25maWd1cmF0aW9uIGF0IDxjb2RlPi9ldGMvYXB0L3NvdXJjZXMubGlzdC5kL2plbGx5ZmluLmxpc3Q8L2NvZGU+OjwvcD4KPHByZT48Y29kZSBjbGFzcz0ibGFuZy1zaCI+ZWNobyAmcXVvdDtkZWIgW2FyY2g9JCggZHBrZyAtLXByaW50LWFyY2hpdGVjdHVyZSApXSBodHRwczovL3JlcG8uamVsbHlmaW4ub3JnL3VidW50dSAkKCBsc2JfcmVsZWFzZSAtYyAtcyApIG1haW4mcXVvdDsgfCBzdWRvIHRlZSAvZXRjL2FwdC9zb3VyY2VzLmxpc3QuZC9qZWxseWZpbi5saXN0CjwvY29kZT48L3ByZT48ZGl2IGNsYXNzPSJOT1RFIj48aDU+Tm90ZTwvaDU+PHA+U3VwcG9ydGVkIHJlbGVhc2VzIGFyZSA8Y29kZT5iaW9uaWM8L2NvZGU+LCA8Y29kZT5jb3NtaWM8L2NvZGU+LCA8Y29kZT5kaXNjbzwvY29kZT4sIDxjb2RlPmVvYW48L2NvZGU+LCBhbmQgPGNvZGU+Zm9jYWw8L2NvZGU+LjwvcD4KPC9kaXY+CjwvbGk+CjxsaT48cD5VcGRhdGUgQVBUIHJlcG9zaXRvcmllczo8L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmctc2giPnN1ZG8gYXB0IHVwZGF0ZQo8L2NvZGU+PC9wcmU+PC9saT4KPGxpPjxwPkluc3RhbGwgSmVsbHlmaW46PC9wPgo8cHJlPjxjb2RlIGNsYXNzPSJsYW5nLXNoIj5zdWRvIGFwdCBpbnN0YWxsIGplbGx5ZmluCjwvY29kZT48L3ByZT48L2xpPgo8bGk+PHA+TWFuYWdlIHRoZSBKZWxseWZpbiBzeXN0ZW0gc2VydmljZSB3aXRoIHlvdXIgdG9vbCBvZiBjaG9pY2U6PC9wPgo8cHJlPjxjb2RlIGNsYXNzPSJsYW5nLXNoIj5zdWRvIHNlcnZpY2UgamVsbHlmaW4gc3RhdHVzCnN1ZG8gc3lzdGVtY3RsIHJlc3RhcnQgamVsbHlmaW4Kc3VkbyAvZXRjL2luaXQuZC9qZWxseWZpbiBzdG9wCjwvY29kZT48L3ByZT48L2xpPgo8L29sPgo8aDQgaWQ9InVidW50dS1wYWNrYWdlcyI+VWJ1bnR1IFBhY2thZ2VzPC9oND4KPHA+UmF3IFVidW50dSBwYWNrYWdlcywgaW5jbHVkaW5nIG9sZCB2ZXJzaW9ucywgYXJlIGF2YWlsYWJsZSA8YSBocmVmPSJodHRwczovL2plbGx5ZmluLm9yZy9kb3dubG9hZHMvI3VidW50dSI+aGVyZTwvYT4uPC9wPgo8ZGl2IGNsYXNzPSJOT1RFIj48aDU+Tm90ZTwvaDU+PHA+VGhlIHJlcG9zaXRvcnkgaXMgdGhlIHByZWZlcnJlZCB3YXkgdG8gaW5zdGFsbCBKZWxseWZpbiBvbiBVYnVudHUsIGFzIGl0IGNvbnRhaW5zIHNldmVyYWwgZGVwZW5kZW5jaWVzIGFzIHdlbGwuPC9wPgo8L2Rpdj4KPG9sPgo8bGk+PHA+RW5hYmxlIHRoZSBVbml2ZXJzZSByZXBvc2l0b3J5IHRvIG9idGFpbiBhbGwgdGhlIEZGTXBlZyBkZXBlbmRlbmNpZXMsIGFuZCB1cGRhdGUgcmVwb3NpdG9yaWVzOjwvcD4KPHByZT48Y29kZSBjbGFzcz0ibGFuZy1zaCI+c3VkbyBhZGQtYXB0LXJlcG9zaXRvcnkgdW5pdmVyc2UKc3VkbyBhcHQgdXBkYXRlCjwvY29kZT48L3ByZT48L2xpPgo8bGk+PHA+RG93bmxvYWQgdGhlIGRlc2lyZWQgPGNvZGU+amVsbHlmaW48L2NvZGU+IGFuZCA8Y29kZT5qZWxseWZpbi1mZm1wZWc8L2NvZGU+IDxjb2RlPi5kZWI8L2NvZGU+IHBhY2thZ2VzIGZyb20gdGhlIHJlcG9zaXRvcnkuPC9wPgo8L2xpPgo8bGk+PHA+SW5zdGFsbCB0aGUgcmVxdWlyZWQgZGVwZW5kZW5jaWVzOjwvcD4KPHByZT48Y29kZSBjbGFzcz0ibGFuZy1zaCI+c3VkbyBhcHQgaW5zdGFsbCBhdCBsaWJzcWxpdGUzLTAgbGliZm9udGNvbmZpZzEgbGliZnJlZXR5cGU2IGxpYnNzbDEuMC4wCjwvY29kZT48L3ByZT48L2xpPgo8bGk+PHA+SW5zdGFsbCB0aGUgZG93bmxvYWRlZCA8Y29kZT4uZGViPC9jb2RlPiBwYWNrYWdlczo8L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmctc2giPnN1ZG8gZHBrZyAtaSBqZWxseWZpbl8qLmRlYiBqZWxseWZpbi1mZm1wZWdfKi5kZWIKPC9jb2RlPjwvcHJlPjwvbGk+CjxsaT48cD5Vc2UgPGNvZGU+YXB0PC9jb2RlPiB0byBpbnN0YWxsIGFueSBtaXNzaW5nIGRlcGVuZGVuY2llczo8L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmctc2giPnN1ZG8gYXB0IC1mIGluc3RhbGwKPC9jb2RlPjwvcHJlPjwvbGk+CjxsaT48cD5NYW5hZ2UgdGhlIEplbGx5ZmluIHN5c3RlbSBzZXJ2aWNlIHdpdGggeW91ciB0b29sIG9mIGNob2ljZTo8L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmctc2giPnN1ZG8gc2VydmljZSBqZWxseWZpbiBzdGF0dXMKc3VkbyBzeXN0ZW1jdGwgcmVzdGFydCBqZWxseWZpbgpzdWRvIC9ldGMvaW5pdC5kL2plbGx5ZmluIHN0b3AKPC9jb2RlPjwvcHJlPjwvbGk+Cjwvb2w+CjwvYXJ0aWNsZT4NCiAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICANCiAgICAgICAgICA8ZGl2IGNsYXNzPSJoaWRkZW4tc20gY29sLW1kLTIiIHJvbGU9ImNvbXBsZW1lbnRhcnkiPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2lkZWFmZml4Ij4NCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udHJpYnV0aW9uIj4NCiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Im5hdiI+DQogICAgICAgICAgICAgICAgICA8bGk+DQogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9qZWxseWZpbi9qZWxseWZpbi1kb2NzL2Jsb2IvbWFzdGVyL2dlbmVyYWwvYWRtaW5pc3RyYXRpb24vaW5zdGFsbGluZy5tZC8jTDEiIGNsYXNzPSJjb250cmlidXRpb24tbGluayI+SW1wcm92ZSB0aGlzIERvYzwvYT4NCiAgICAgICAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICAgICAgPC91bD4NCiAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgIDxuYXYgY2xhc3M9ImJzLWRvY3Mtc2lkZWJhciBoaWRkZW4tcHJpbnQgaGlkZGVuLXhzIGhpZGRlbi1zbSBhZmZpeCIgaWQ9ImFmZml4Ij4NCiAgICAgICAgICAgICAgICA8aDU+SW4gVGhpcyBBcnRpY2xlPC9oNT4NCiAgICAgICAgICAgICAgICA8ZGl2PjwvZGl2Pg0KICAgICAgICAgICAgICA8L25hdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICAgIDwvZGl2Pg0KICAgICAgDQogICAgICA8Zm9vdGVyPg0KICAgICAgICA8ZGl2IGNsYXNzPSJncmFkLWJvdHRvbSI+PC9kaXY+DQogICAgICAgIDxkaXYgY2xhc3M9ImZvb3RlciI+DQogICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4NCiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwdWxsLXJpZ2h0Ij4NCiAgICAgICAgICAgICAgPGEgaHJlZj0iI3RvcCI+QmFjayB0byB0b3A8L2E+DQogICAgICAgICAgICA8L3NwYW4+DQogICAgICAgICAgICANCiAgICAgICAgICAgIDxzcGFuPkdlbmVyYXRlZCBieSA8c3Ryb25nPkRvY0ZYPC9zdHJvbmc+PC9zcGFuPg0KICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICAgIDwvZm9vdGVyPg0KICAgIDwvZGl2Pg0KICAgIA0KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii4uLy4uL3N0eWxlcy9kb2NmeC52ZW5kb3IuanMiPjwvc2NyaXB0Pg0KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii4uLy4uL3N0eWxlcy9kb2NmeC5qcyI+PC9zY3JpcHQ+DQogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iLi4vLi4vc3R5bGVzL21haW4uanMiPjwvc2NyaXB0Pg0KICA8L2JvZHk+DQo8L2h0bWw+DQo=
  recorded_at: Sat, 03 Sep 2022 20:59:58 GMT
recorded_with: VCR 6.1.0
